{"version":3,"sources":["Colors.ts","UI.ts","Drawing.style.ts","Drawing.tsx","DrawArea.style.ts","DrawArea.tsx","FlowChart.style.ts","FlowChart.tsx","Home.style.ts","Home.tsx","index.style.ts","index.tsx"],"names":["Colors","Button","styled","button","withConfig","displayName","componentId","Row","div","Column","Wrapper","Path","path","DrawingSVG","svg","DrawingLine","_ref2","pathData","line","map","p","concat","x","y","join","react_default","a","createElement","d","Drawing","_ref","onMouseDown","onMouseMove","lines","drawingRef","relativePoint","event","boundingRect","current","getBoundingClientRect","clientX","left","clientY","top","mouseEvent","preventDefault","onTouchStart","touchEvent","touches","onTouchMove","ref","index","Drawing_DrawingLine","key","DrawArea","onChange","_useState","useState","_useState2","Object","slicedToArray","isDrawing","setIsDrawing","useRef","handleMouseUp","useEffect","document","addEventListener","removeEventListener","DrawArea_style_Wrapper","src_Drawing","point","toConsumableArray","slice","length","Node","isSelected","css","_templateObject","Preview","Thumbnail","TextPreview","PanelPreview","panel","drawing","text","FlowChart","panels","selected","onNodeClick","hoverIndex","setHoverIndex","FlowChart_style_Wrapper","Fragment","onClick","onMouseEnter","onMouseLeave","FlowChart_PanelPreview","TextInput","textarea","DrawColumn","Home","setDrawing","_useState3","_useState4","setText","_useState5","_useState6","setSelected","_useState7","_useState8","setPanels","localStorage","setItem","JSON","stringify","Home_style_Wrapper","src_DrawArea","target","value","placeholder","savedPanels","getItem","parse","prevPanels","newPanels","src_FlowChart","GlobalStyle","createGlobalStyle","index_style_templateObject","ReactDOM","render","src_Home","getElementById"],"mappings":"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","file":"static/js/main.2a2a8c18.chunk.js","sourcesContent":["export default {\n  primary: '#3d695f',\n  primaryVariant: '#1e352f',\n  secondary: '#c1d2ce',\n  secondaryVariant: '#65877f',\n};\n","import styled from 'styled-components/macro';\n\nimport Colors from './Colors';\n\nexport const Button = styled.button`\n  all: unset;\n  flex: 1;\n  padding: 7px;\n  background: ${Colors.secondaryVariant};\n  border-radius: 5px;\n  margin: 5px;\n  text-align: center;\n  cursor: pointer;\n  border: solid 3px ${Colors.secondaryVariant};\n  \n  :hover {\n    background: ${Colors.primary};\n  }\n  \n  :active {\n    border-color: ${Colors.primaryVariant};\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n`;\n\nexport const Column = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from 'styled-components/macro';\n\nimport Colors from './Colors';\n\nexport const Wrapper = styled.div`\n  background: ${Colors.secondary};\n  flex: 1;\n  touch-action: none;\n`\n\nexport const Path = styled.path`\n  fill: none;\n  stroke-width: 5px;\n  stroke: ${Colors.primaryVariant};\n  stroke-linejoin: round;\n  stroke-linecap: round;\n`\n\nexport const DrawingSVG = styled.svg`\n  width: 100%;\n  height: 100%;\n`","import React from 'react';\n\nimport {\n  Wrapper,\n  DrawingSVG,\n  Path,\n} from './Drawing.style';\n\nconst Drawing: React.FC<{\n  onMouseDown?: (point: Point) => void,\n  onMouseMove?: (point: Point) => void,\n  drawingRef?: React.RefObject<HTMLDivElement>,\n  lines: LinePath,\n}> = ({\n  onMouseDown,\n  onMouseMove,\n  lines,\n  drawingRef,\n}) => {\n  function handleMouseDown(mouseEvent: React.MouseEvent) {\n    mouseEvent.preventDefault();\n    mouseEvent.button === 0 && onMouseDown!(relativePoint(mouseEvent));\n  }\n\n  function handleMouseMove(mouseEvent: React.MouseEvent) {\n    mouseEvent.preventDefault();\n    onMouseMove!(relativePoint(mouseEvent));\n  }\n\n  function handleTouchStart(touchEvent: React.TouchEvent) {\n    touchEvent.preventDefault();\n    onMouseDown!(relativePoint(touchEvent.touches[0]));\n  }\n\n  function handleTouchMove(touchEvent: React.TouchEvent) {\n    touchEvent.preventDefault();\n    onMouseMove!(relativePoint(touchEvent.touches[0]));\n  }\n\n  function relativePoint(event: React.MouseEvent | React.Touch) : Point {\n    const boundingRect = drawingRef!.current!.getBoundingClientRect();\n    return {\n      x: event.clientX - boundingRect.left,\n      y: event.clientY - boundingRect.top,\n    };\n  }\n\n  return (\n    <Wrapper\n      onMouseDown={onMouseDown && handleMouseDown}\n      onMouseMove={onMouseMove && handleMouseMove}\n      onTouchStart={onMouseDown && handleTouchStart}\n      onTouchMove={onMouseMove && handleTouchMove}\n      ref={drawingRef}\n    >\n      <DrawingSVG>\n        {lines.map((line, index) => (\n          <DrawingLine\n            key={index}\n            line={line}\n          />\n        ))}\n      </DrawingSVG>\n    </Wrapper>\n  );\n};\n\nconst DrawingLine: React.FC<{ line: Line }> = ({ line }) => {\n  const pathData = \"M \" +\n    line\n      .map(p => {\n        return `${p.x} ${p.y}`;\n      })\n      .join(\" L \");\n\n  return <Path d={pathData} />;\n}\nexport default Drawing;","import styled from 'styled-components/macro';\n\nexport const Wrapper = styled.div`\n  border-radius: 10px 10px 0 0;\n  margin: 5px;\n  overflow: hidden;\n  cursor: crosshair;\n  display: flex;\n  justify-content: center;\n  flex: 1;\n`\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Drawing from './Drawing';\nimport { Wrapper } from './DrawArea.style';\n\nconst DrawArea: React.FC<{\n  lines: LinePath,\n  onChange: (lines: LinePath) => void,\n}> = ({\n  lines,\n  onChange,\n}) => {\n  const [isDrawing, setIsDrawing] = useState(false);\n  const drawingRef = useRef<HTMLDivElement>(null);\n\n  function handleMouseDown(point: Point) {\n    onChange(lines.concat([[point]]))\n    setIsDrawing(true);\n  }\n\n  function handleMouseMove(point: Point) {\n    if (!isDrawing) return;\n\n    onChange([\n      ...lines.slice(0, lines.length - 1),\n      lines[lines.length - 1].concat([point]),\n    ]);\n  }\n\n  function handleMouseUp() {\n    setIsDrawing(false);\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"mouseup\", handleMouseUp);\n    return () => {\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  });\n\n  return (\n    <Wrapper>\n      <Drawing\n        drawingRef={drawingRef}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        lines={lines}\n      />\n    </Wrapper>\n\n  );\n}\n\nexport default DrawArea;\n","import styled, { css } from 'styled-components/macro';\n\nimport Colors from './Colors';\n\nexport const Wrapper = styled.div`\n  border: 3px solid ${Colors.secondaryVariant};\n  border-radius: 5px;\n  margin: 5px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n`\n\nexport const Node = styled.div<{ isSelected: boolean }>`\n  width: 20px;\n  height: 20px;\n  background: ${Colors.secondary};\n  border-radius: 100%;\n  border: 5px solid ${Colors.primary};\n  cursor: pointer;\n\n  :hover {\n    border-color: ${Colors.secondaryVariant};\n  }\n\n  ${({ isSelected }) => isSelected && css`\n    border-color: ${Colors.primaryVariant};\n    :hover {\n      border-color: ${Colors.primaryVariant};\n    }\n  `}\n`\nexport const Preview = styled.div`\n  position: relative;\n  left: -280px;\n  bottom: 181px;\n  border-radius: 50px;\n  border: 20px solid ${Colors.secondaryVariant};\n  overflow: hidden;\n  width: fit-content;\n  transform: scale(0.2);\n`\n\nexport const Thumbnail = styled.div`\n  /* transform: scale(0.2); */\n  width: fit-content;\n`\n\nexport const TextPreview = styled.div`\n  font-size: 40px;\n  width: 360px;\n  height: 50px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  background: ${Colors.primaryVariant};\n  padding: 20px;\n`","import React, { useState } from 'react';\n\nimport Drawing from './Drawing';\nimport {\n  Wrapper,\n  Node,\n  Thumbnail,\n  TextPreview,\n  Preview,\n} from './FlowChart.style';\n\nconst FlowChart: React.FC<{\n  panels: Panel[],\n  selected: number,\n  onNodeClick: (panel: Panel, index: number) => void,\n}> = ({\n  panels,\n  selected,\n  onNodeClick,\n}) => {\n  const [hoverIndex, setHoverIndex] = useState<number>(-1);\n\n  return (\n    <Wrapper>\n      {panels.map((panel, index) => (\n        <React.Fragment key={index}>\n          <Node\n            isSelected={selected === index}\n            onClick={() => onNodeClick(panel, index)}\n            onMouseEnter={() => setHoverIndex(index)}\n            onMouseLeave={() => setHoverIndex(-1)}\n          >\n            {hoverIndex === index && selected !== index && (\n              <PanelPreview panel={panel} />\n            )}\n          </Node>\n        </React.Fragment>\n      ))}\n    </Wrapper>\n  )\n};\n\nconst PanelPreview: React.FC<{\n  panel: Panel,\n}> = ({ panel }) => (\n  <Preview>\n    <Thumbnail>\n      <Drawing lines={panel.drawing}/>\n    </Thumbnail>\n    <TextPreview>{panel.text}</TextPreview>\n  </Preview>\n);\n\nexport default FlowChart;","import styled from 'styled-components/macro';\n\nimport Colors from './Colors';\nimport { Row, Column } from './UI';\n\nexport const Wrapper = styled(Row)`\n  background: ${Colors.primary};\n  color: ${Colors.secondary};\n  flex: 1;\n\n  @media (orientation:portrait) {\n    flex-direction: column;\n  }\n`\n\nexport const TextInput = styled.textarea`\n  all: unset;\n  background: ${Colors.primaryVariant};\n  padding: 10px;\n  border-radius: 0 0 10px 10px;\n  margin: 0 5px 5px 5px;\n  height: 55px;\n\n  ::placeholder {\n    color: ${Colors.secondaryVariant}\n  }\n`\n\nexport const DrawColumn = styled(Column)`\n  flex: 2;\n`;\n","import React, { useState, useEffect } from 'react';\n\nimport {\n  Row,\n  Column,\n  Button,\n} from './UI';\nimport DrawArea from './DrawArea';\nimport FlowChart from './FlowChart';\nimport {\n  Wrapper,\n  TextInput,\n  DrawColumn,\n} from './Home.style';\n\nconst Home: React.FC = () => {\n  const [drawing, setDrawing] = useState<LinePath>([]);\n  const [text, setText] = useState<string>('');\n  const [selected, setSelected] = useState<number>(0);\n  const [panels, setPanels] = useState<Panel[]>([{\n    drawing: [],\n    text: '',\n  }]);\n\n  function handleSaveClick() {\n    setPanels(prevPanels => {\n      const newPanels = prevPanels.slice(0);\n      newPanels[selected] = { drawing, text };\n      return newPanels;\n    });\n  }\n\n  function handleTextChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n    setText(event.target.value);\n  }\n\n  function handleAddChoiceClick() {\n    // TODO remove this\n    // Loading from local storage to make development easier.\n    // Nothing to do with adding choices, just using the\n    // button for convenience.\n    const savedPanels = localStorage.getItem('panels');\n    if (!savedPanels) return;\n    setPanels(JSON.parse(savedPanels));\n  }\n\n  function handleNodeClick(panel: Panel, index: number) {\n    setSelected(index);\n  }\n\n  function handleNewClick() {\n    setPanels(prevPanels => [\n      ...prevPanels,\n      {\n        drawing: [],\n        text: '',\n      },\n    ]);\n  }\n\n  useEffect(() => {\n    setSelected(panels.length - 1);\n  }, [panels.length]);\n\n  useEffect(() => {\n    setDrawing(panels[selected].drawing);\n    setText(panels[selected].text);\n  }, [panels, selected]);\n\n  useEffect(() => {\n    // TODO remove this\n    // Saving to local storage to make development easier\n    if (panels.length <= 1) return;\n    localStorage.setItem('panels', JSON.stringify(panels));\n  }, [panels]);\n\n  return (\n    <Wrapper>\n      <DrawColumn>\n        <DrawArea\n          lines={drawing}\n          onChange={setDrawing}\n        />\n        <TextInput\n          onChange={handleTextChange}\n          value={text}\n          placeholder=\"Insert panel text here...\"\n        />\n        <Row>\n          <Button onClick={handleAddChoiceClick}>Add Choice</Button>\n          <Button onClick={handleSaveClick}>Save Panel</Button>\n        </Row>\n      </DrawColumn>\n      <Column>\n        <Row>\n          <Button>Delete Panel</Button>\n          <Button onClick={handleNewClick}>New Panel</Button>\n        </Row>\n        <FlowChart\n          panels={panels}\n          onNodeClick={handleNodeClick}\n          selected={selected}\n        />\n      </Column>\n    </Wrapper>\n  )\n}\n\nexport default Home;","import { createGlobalStyle } from 'styled-components'\n\nimport Colors from './Colors';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background: ${Colors.primary};\n  }\n\n  #root {\n    display: flex;\n    height: 100vh;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Home from './Home';\nimport { GlobalStyle } from './index.style';\n\nReactDOM.render(\n  <>\n    <GlobalStyle/>\n    <Home />\n  </>\n, document.getElementById('root'));\n"],"sourceRoot":""}