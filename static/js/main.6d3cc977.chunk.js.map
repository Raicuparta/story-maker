{"version":3,"sources":["Colors.ts","UI.ts","DrawingSVG.style.ts","DrawingSVG.tsx","Drawing.style.ts","Drawing.tsx","DrawArea.style.ts","DrawArea.tsx","FlowChart.style.ts","FlowChart.tsx","Home.style.ts","Home.tsx","index.style.ts","index.tsx"],"names":["Colors","primary","primaryVariant","darken","secondary","lighten","secondaryVariant","Button","styled","button","withConfig","displayName","componentId","Row","div","Column","Path","path","SVG","svg","viewBoxSize","DrawingLine","_ref2","pathData","line","map","p","concat","x","y","join","react_default","a","createElement","d","Drawing","_ref","lines","viewBox","preserveAspectRatio","width","height","fill","index","DrawingSVG_DrawingLine","key","Wrapper","onMouseDown","onInputDown","onMouseMove","onInputMove","_useState","useState","_useState2","Object","slicedToArray","isDrawing","setIsDrawing","drawingRef","useRef","handleMouseUp","relativePoint","event","_getBoundingClientRec","current","getBoundingClientRect","left","top","scale","offset","clientX","clientY","useEffect","document","addEventListener","removeEventListener","downCallbacks","mouseEvent","preventDefault","onTouchStart","touchEvent","touches","moveCallbacks","onTouchMove","assign","ref","DrawingSVG","DrawArea","onChange","DrawArea_style_Wrapper","src_Drawing","point","toConsumableArray","slice","length","Node","isSelected","css","_templateObject","Preview","TextPreview","NodeRow","NodeFork","PanelPreview","_ref3","panel","drawing","text","FlowChart","panels","selected","onNodeClick","hoverId","setHoverIndex","wrapperRef","FlowChart_style_Wrapper","PanelNode","id","position","depth","bounds","xBranchOffset","Math","pow","style","undefined","onClick","onMouseEnter","onMouseLeave","FlowChart_PanelPreview","nextId","choices","choice","TextInput","textarea","DrawColumn","Home","setDrawing","_useState3","_useState4","setText","_useState5","_useState6","setSelected","_useState7","_useState8","setPanels","localStorage","setItem","JSON","stringify","Home_style_Wrapper","src_DrawArea","target","value","placeholder","savedPanels","getItem","parse","prevPanels","newPanels","objectSpread","push","src_FlowChart","GlobalStyle","createGlobalStyle","index_style_templateObject","ReactDOM","render","Fragment","src_Home","getElementById"],"mappings":"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","file":"static/js/main.6d3cc977.chunk.js","sourcesContent":["import { darken, lighten } from 'polished';\n\nconst primary = '#84567b';\nconst primaryVariant = darken(0.15, primary);\nconst secondary = lighten(0.5, primary);\nconst secondaryVariant = lighten(0.15, primary);\n\nexport default {\n  primary,\n  primaryVariant,\n  secondary,\n  secondaryVariant,\n}\n","import styled from 'styled-components/macro';\n\nimport Colors from './Colors';\n\nexport const Button = styled.button`\n  all: unset;\n  flex: 1;\n  padding: 7px;\n  background: ${Colors.secondaryVariant};\n  border-radius: 5px;\n  margin: 5px;\n  text-align: center;\n  cursor: pointer;\n  border: solid 3px ${Colors.secondaryVariant};\n  \n  :hover {\n    background: ${Colors.primary};\n  }\n  \n  :active {\n    border-color: ${Colors.primaryVariant};\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n`;\n\nexport const Column = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from 'styled-components/macro';\n\nimport Colors from './Colors';\n\nexport const Path = styled.path`\n  fill: none;\n  stroke-width: 5px;\n  stroke: ${Colors.primaryVariant};\n  stroke-linejoin: round;\n  stroke-linecap: round;\n`\n\nexport const SVG = styled.svg`\n  width: 100%;\n  height: 100%;\n`","import React from 'react';\n\nimport Colors from './Colors';\nimport {\n  SVG,\n  Path,\n} from './DrawingSVG.style';\n\nconst viewBoxSize = {\n  width: 400,\n  height: 300,\n};\n\nconst Drawing: React.FC<{\n  lines: LinePath,\n}> = ({\n  lines,\n}) => {\n  return (\n    <SVG\n      viewBox={`0 0 ${viewBoxSize.width} ${viewBoxSize.height}`}\n      preserveAspectRatio=\"xMidYMid meet\"\n    >\n      <rect width=\"100%\" height=\"100%\" fill={Colors.secondary}/>\n      {lines.map((line, index) => (\n        <DrawingLine\n          key={index}\n          line={line}\n        />\n      ))}\n    </SVG>\n  );\n};\n\nconst DrawingLine: React.FC<{ line: Line }> = ({ line }) => {\n  const pathData = \"M \" +\n    line\n      .map(p => {\n        return `${p.x} ${p.y}`;\n      })\n      .join(\" L \");\n\n  return <Path d={pathData} />;\n}\nexport default Drawing;","import styled from 'styled-components/macro';\n\nexport const Wrapper = styled.div`\n  flex: 1;\n  touch-action: none;\n`\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport DrawingSVG from './DrawingSVG';\nimport { Wrapper } from './Drawing.style';\n\nconst viewBoxSize = {\n  width: 400,\n  height: 300,\n};\n\nconst Drawing: React.FC<{\n  onInputDown?: (point: Point) => void,\n  onInputMove?: (point: Point) => void,\n  isDrawing?: boolean,\n  lines: LinePath,\n}> = ({\n  onInputDown: onMouseDown,\n  onInputMove: onMouseMove,\n  lines,\n}) => {\n  const [isDrawing, setIsDrawing] = useState(false);\n  const drawingRef = useRef<HTMLDivElement>(null);\n\n  function handleMouseDown(mouseEvent: React.MouseEvent) {\n    mouseEvent.preventDefault();\n    setIsDrawing(true);\n    mouseEvent.button === 0 && onMouseDown!(relativePoint(mouseEvent));\n  }\n\n  function handleMouseMove(mouseEvent: React.MouseEvent) {\n    mouseEvent.preventDefault();\n    onMouseMove!(relativePoint(mouseEvent));\n  }\n\n  function handleTouchStart(touchEvent: React.TouchEvent) {\n    touchEvent.preventDefault();\n    setIsDrawing(true);\n    onMouseDown!(relativePoint(touchEvent.touches[0]));\n  }\n\n  function handleTouchMove(touchEvent: React.TouchEvent) {\n    touchEvent.preventDefault();\n    onMouseMove!(relativePoint(touchEvent.touches[0]));\n  }\n\n  function handleMouseUp() {\n    setIsDrawing(false);\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"mouseup\", handleMouseUp);\n    return () => {\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  });\n\n  function relativePoint(event: React.MouseEvent | React.Touch) : Point {\n    const {\n      width,\n      height,\n      left,\n      top,\n    } = drawingRef!.current!.getBoundingClientRect();\n\n    const viewBoxRatio = viewBoxSize.height / viewBoxSize.width;\n    const boundsRatio = height / width;\n\n    const scale = viewBoxRatio < boundsRatio\n      ? width / viewBoxSize.width\n      : height / viewBoxSize.height\n\n    const offset = {\n      x: 0,\n      y: 0,\n    };\n    \n    if (width > height) {\n      offset.x += (width - (viewBoxSize.width * scale)) / 2;\n    } else {\n      offset.y += (height - (viewBoxSize.height * scale)) / 2;\n    }\n\n    return {\n      x: (event.clientX - offset.x) / scale - left,\n      y: (event.clientY - offset.y) / scale - top,\n    };\n  }\n\n  const downCallbacks = (onMouseDown && onMouseMove) ? {\n    onMouseDown: handleMouseDown,\n    onTouchStart: handleTouchStart,\n  } : {};\n  \n  const moveCallbacks = (isDrawing && onMouseDown && onMouseMove) ? {\n    onMouseMove: handleMouseMove,\n    onTouchMove: handleTouchMove,\n  } : {}\n\n  return (\n    <Wrapper\n      {...downCallbacks}\n      {...moveCallbacks}\n      ref={drawingRef}\n    >\n      <DrawingSVG lines={lines} />\n    </Wrapper>\n  );\n};\n\nexport default Drawing;","import styled from 'styled-components/macro';\n\nimport Colors from './Colors';\n\nexport const Wrapper = styled.div`\n  margin: 5px;\n  overflow: hidden;\n  cursor: crosshair;\n  display: flex;\n  justify-content: center;\n  flex: 1;\n  background: ${Colors.secondaryVariant};\n  border-radius: 10px;\n`\n","import React from 'react';\n\nimport Drawing from './Drawing';\nimport { Wrapper } from './DrawArea.style';\n\nconst DrawArea: React.FC<{\n  lines: LinePath,\n  onChange: (lines: LinePath) => void,\n}> = ({\n  lines,\n  onChange,\n}) => {\n  function handleInputDown(point: Point) {\n    onChange(lines.concat([[point]]))\n  }\n\n  function handleInputMove(point: Point) {\n    onChange([\n      ...lines.slice(0, lines.length - 1),\n      lines[lines.length - 1].concat([point]),\n    ]);\n  }\n\n  return (\n    <Wrapper>\n      <Drawing\n        onInputDown={handleInputDown}\n        onInputMove={handleInputMove}\n        lines={lines}\n      />\n    </Wrapper>\n\n  );\n}\n\nexport default DrawArea;\n","import styled, { css } from 'styled-components/macro';\n\nimport Colors from './Colors';\n\nexport const Wrapper = styled.div`\n  border: 3px solid ${Colors.secondaryVariant};\n  border-radius: 5px;\n  margin: 5px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n  position: relative;\n  overflow: scroll;\n  margin-bottom: 20px;\n`\n\nexport const Node = styled.div<{ isSelected: boolean }>`\n  width: 20px;\n  height: 20px;\n  background: ${Colors.secondary};\n  border-radius: 100%;\n  border: 5px solid ${Colors.primary};\n  cursor: pointer;\n\n  :hover {\n    border-color: ${Colors.secondaryVariant};\n  }\n\n  ${({ isSelected }) => isSelected && css`\n    border-color: ${Colors.primaryVariant};\n    :hover {\n      border-color: ${Colors.primaryVariant};\n    }\n  `}\n`\nexport const Preview = styled.div`\n  border-radius: 10px;\n  border: 5px solid ${Colors.secondaryVariant};\n  overflow: hidden;\n  position: relative;\n  right: 122px;\n  bottom: 5px;\n  width: 100px;\n`\n\nexport const TextPreview = styled.div`\n  font-size: 10px;\n  height: 10px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  background: ${Colors.primaryVariant};\n  padding: 5px;\n  margin-top: -5px;\n`\n\nexport const NodeRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n`\n\nexport const NodeFork = styled.div`\n  display: flex;\n  flex: 1;\n`\n","import React, { useState, useRef } from 'react';\n\nimport DrawingSVG from './DrawingSVG';\nimport {\n  Wrapper,\n  Node,\n  TextPreview,\n  Preview,\n  NodeRow,\n  NodeFork,\n} from './FlowChart.style';\n\nconst FlowChart: React.FC<{\n  panels: Panel[],\n  selected: number,\n  onNodeClick: (panel: Panel, index: number) => void,\n}> = ({\n  panels,\n  selected,\n  onNodeClick,\n}) => {\n  const [hoverId, setHoverIndex] = useState<number>(-1);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const PanelNode: React.FC<{\n    id: number,\n    position: { x: number, y: number },\n    depth: number,\n  }> = ({\n    id,\n    position,\n    depth,\n  }) => {\n    const panel = panels[id];\n\n    if (!wrapperRef.current) return null;\n    const bounds = wrapperRef.current.getBoundingClientRect();\n    const xBranchOffset = bounds.width / depth**2;\n\n    return (\n      <NodeRow>\n        <Node\n          style={wrapperRef.current ? {\n            position: 'absolute',\n            top: `${position.y}px`,\n            left: `${bounds.width / 2 + position.x}px`,\n          } : undefined}\n          isSelected={selected === id}\n          onClick={() => onNodeClick(panel, id)}\n          onMouseEnter={() => setHoverIndex(id)}\n          onMouseLeave={() => setHoverIndex(-1)}\n        >\n          {hoverId === id && selected !== id && (\n            <PanelPreview panel={panel} />\n          )}\n        </Node>\n        {panel.nextId && (\n          <PanelNode\n            id={panel.nextId}\n            position={{\n              x: position.x,\n              y: position.y + 40,\n            }}\n            depth={depth}\n          />\n        )}\n        {panel.choices && (\n          <NodeFork>\n            {panel.choices.map((choice, index) => (\n              <PanelNode\n                key={choice.id}\n                id={choice.id}\n                position={{\n                  x: position.x - xBranchOffset + (2 * xBranchOffset * index) ,\n                  y: position.y + 40,\n                }}\n                depth={depth + 1}\n              />\n            ))}\n          </NodeFork>\n        )}\n      </NodeRow>\n    )\n  };\n\n  return (\n    <Wrapper ref={wrapperRef}>\n      <PanelNode\n        id={0}\n        depth={2}\n        position={({ x: 0, y: 10 })}\n      />\n    </Wrapper>\n  )\n};\n\nconst PanelPreview: React.FC<{\n  panel: Panel,\n}> = ({ panel }) => (\n  <Preview>\n    <DrawingSVG lines={panel.drawing}/>\n    <TextPreview>{panel.text}</TextPreview>\n  </Preview>\n);\n\nexport default FlowChart;","import styled from 'styled-components/macro';\n\nimport Colors from './Colors';\nimport { Row, Column } from './UI';\n\nexport const Wrapper = styled(Row)`\n  background: ${Colors.primary};\n  color: ${Colors.secondary};\n  flex: 1;\n\n  @media (orientation:portrait) {\n    flex-direction: column;\n  }\n`;\n\nexport const TextInput = styled.textarea`\n  all: unset;\n  background: ${Colors.primaryVariant};\n  padding: 10px;\n  border-radius: 10px;\n  margin: 5px;\n  height: 55px;\n\n  ::placeholder {\n    color: ${Colors.secondaryVariant}\n  }\n`;\n\nexport const DrawColumn = styled(Column)`\n  flex: 2;\n`;\n","import React, { useState, useEffect } from 'react';\n\nimport {\n  Row,\n  Column,\n  Button,\n} from './UI';\nimport DrawArea from './DrawArea';\nimport FlowChart from './FlowChart';\nimport {\n  Wrapper,\n  TextInput,\n  DrawColumn,\n} from './Home.style';\n\nconst Home: React.FC = () => {\n  const [drawing, setDrawing] = useState<LinePath>([]);\n  const [text, setText] = useState<string>('');\n  const [selected, setSelected] = useState<number>(0);\n  const [panels, setPanels] = useState<Panel[]>([{\n    drawing: [],\n    text: '',\n  }]);\n\n  function handleSaveClick() {\n    setPanels(prevPanels => {\n      const newPanels = prevPanels.slice(0);\n      newPanels[selected] = {\n        ...newPanels[selected],\n        drawing,\n        text,\n      };\n      return newPanels;\n    });\n  }\n\n  function handleTextChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n    setText(event.target.value);\n  }\n\n  function handleLoadClick() {\n    // TODO remove this\n    // Loading from local storage to make development easier.\n    const savedPanels = localStorage.getItem('panels');\n    if (!savedPanels) return;\n    setPanels(JSON.parse(savedPanels));\n  }\n\n  function handleNodeClick(panel: Panel, index: number) {\n    setSelected(index);\n  }\n\n  function handleNewPanelClick() {\n    if (panels[selected].nextId || panels[selected].choices) return;\n\n    setPanels(prevPanels => {\n      const newPanels = prevPanels.slice(0);\n      newPanels[selected].nextId = panels.length;\n      newPanels.push({\n        drawing: [],\n        text: '',\n      });\n\n      return newPanels;\n    });\n  }\n\n  function handleNewChoiceClick() {\n    if (panels[selected].nextId || panels[selected].choices) return;\n\n    setPanels(prevPanels => {\n      const newPanels = prevPanels.slice(0);\n      newPanels[selected].choices = [\n        {id: newPanels.length},\n        {id: newPanels.length + 1},\n      ];\n      newPanels.push({\n        drawing: [],\n        text: '',\n      });\n      newPanels.push({\n        drawing: [],\n        text: '',\n      });\n\n      return newPanels;\n    });\n  }\n\n  useEffect(() => {\n    setSelected(panels.length - 1);\n  }, [panels.length]);\n\n  useEffect(() => {\n    setDrawing(panels[selected].drawing);\n    setText(panels[selected].text);\n  }, [panels, selected]);\n\n  useEffect(() => {\n    // TODO remove this\n    // Saving to local storage to make development easier\n    if (panels.length <= 1) return;\n    localStorage.setItem('panels', JSON.stringify(panels));\n  }, [panels]);\n\n  return (\n    <Wrapper>\n      <DrawColumn>\n        <DrawArea\n          lines={drawing}\n          onChange={setDrawing}\n        />\n        <TextInput\n          onChange={handleTextChange}\n          value={text}\n          placeholder=\"Insert panel text here\"\n        />\n        <Row>\n          <Button onClick={handleLoadClick}>[Load]</Button>\n          <Button onClick={handleSaveClick}>Save Panel</Button>\n        </Row>\n      </DrawColumn>\n      <Column>\n        <Row>\n          <Button onClick={handleNewChoiceClick}>+ Choice</Button>\n          <Button onClick={handleNewPanelClick}>+ Panel</Button>\n        </Row>\n        <FlowChart\n          panels={panels}\n          onNodeClick={handleNodeClick}\n          selected={selected}\n        />\n      </Column>\n    </Wrapper>\n  )\n}\n\nexport default Home;","import { createGlobalStyle } from 'styled-components'\n\nimport Colors from './Colors';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background: ${Colors.primary};\n  }\n\n  #root {\n    display: flex;\n    height: 100vh;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Home from './Home';\nimport { GlobalStyle } from './index.style';\n\nReactDOM.render(\n  <>\n    <GlobalStyle/>\n    <Home />\n  </>\n, document.getElementById('root'));\n"],"sourceRoot":""}