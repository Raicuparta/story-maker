{"version":3,"sources":["database.ts","Colors.ts","UI.ts","DrawingSVG.style.ts","DrawingSVG.tsx","Drawing.style.ts","Drawing.tsx","DrawArea.style.ts","DrawArea.tsx","FlowChart.style.ts","FlowChart.tsx","Home.style.ts","Home.tsx","index.style.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","Colors","primary","primaryVariant","darken","secondary","lighten","secondaryVariant","Button","styled","button","withConfig","displayName","componentId","Row","div","Column","Path","path","SVG","svg","viewBoxSize","DrawingLine","_ref2","pathData","line","map","p","concat","x","y","join","react_default","a","createElement","d","Drawing","_ref","lines","viewBox","preserveAspectRatio","width","height","fill","index","DrawingSVG_DrawingLine","key","Wrapper","onMouseDown","onInputDown","onMouseMove","onInputMove","_useState","useState","_useState2","Object","slicedToArray","isDrawing","setIsDrawing","drawingRef","useRef","handleMouseUp","relativePoint","event","_getBoundingClientRec","current","getBoundingClientRect","left","top","viewBoxRatio","boundsRatio","scale","offset","clientX","clientY","useEffect","document","addEventListener","removeEventListener","downCallbacks","mouseEvent","preventDefault","onTouchStart","touchEvent","touches","moveCallbacks","onTouchMove","assign","ref","DrawingSVG","DrawArea","onChange","DrawArea_style_Wrapper","src_Drawing","point","toConsumableArray","slice","length","Node","isSelected","css","_templateObject","Preview","TextPreview","NodeRow","NodeFork","PanelPreview","_ref3","panel","drawing","text","FlowChart","panels","selected","onNodeClick","hoverId","setHoverIndex","_useState3","_useState4","bounds","setBounds","wrapperRef","useCallback","node","_node$getBoundingClie","FlowChart_style_Wrapper","PanelNode","id","position","depth","xBranchOffset","Math","pow","style","onClick","onMouseEnter","onMouseLeave","FlowChart_PanelPreview","nextId","choices","choice","TextInput","textarea","DrawColumn","Home","setSelected","setPanels","Home_style_Wrapper","src_DrawArea","prevPanels","newPanels","objectSpread","target","value","placeholder","limitToLast","once","then","snapshot","val","values","JSON","parse","undefined","push","stringify","console","log","src_FlowChart","GlobalStyle","createGlobalStyle","index_style_templateObject","ReactDOM","render","Fragment","src_Home","getElementById"],"mappings":"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","file":"static/js/main.a45cb9cf.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyC5mVxaorL_LmNWasC5LNmAC3cmlQ-5vFM',\n  authDomain: 'story-maker-85706.firebaseapp.com',\n  databaseURL: 'https://story-maker-85706.firebaseio.com',\n  projectId: 'story-maker-85706',\n  storageBucket: 'story-maker-85706.appspot.com',\n  messagingSenderId: '105986550181',\n  appId: '1:105986550181:web:81ec40d053faad45'\n});\n\nexport default firebase.database();","import { darken, lighten } from 'polished';\n\nconst primary = '#84567b';\nconst primaryVariant = darken(0.15, primary);\nconst secondary = lighten(0.5, primary);\nconst secondaryVariant = lighten(0.15, primary);\n\nexport default {\n  primary,\n  primaryVariant,\n  secondary,\n  secondaryVariant,\n}\n","import styled from 'styled-components/macro';\n\nimport Colors from './Colors';\n\nexport const Button = styled.button`\n  all: unset;\n  flex: 1;\n  padding: 7px;\n  background: ${Colors.secondaryVariant};\n  border-radius: 5px;\n  margin: 5px;\n  text-align: center;\n  cursor: pointer;\n  border: solid 3px ${Colors.secondaryVariant};\n  \n  :hover {\n    background: ${Colors.primary};\n  }\n  \n  :active {\n    border-color: ${Colors.primaryVariant};\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n`;\n\nexport const Column = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from 'styled-components/macro';\n\nimport Colors from './Colors';\n\nexport const Path = styled.path`\n  fill: none;\n  stroke-width: 5px;\n  stroke: ${Colors.primaryVariant};\n  stroke-linejoin: round;\n  stroke-linecap: round;\n`\n\nexport const SVG = styled.svg`\n  height: 100%;\n  width: 100%;\n`","import React from 'react';\n\nimport Colors from './Colors';\nimport {\n  Path,\n  SVG,\n} from './DrawingSVG.style';\n\nconst viewBoxSize = {\n  width: 400,\n  height: 300,\n};\n\nconst Drawing: React.FC<{\n  lines: LinePath,\n}> = ({\n  lines,\n}) => {\n  return (\n    <SVG\n      viewBox={`0 0 ${viewBoxSize.width} ${viewBoxSize.height}`}\n      preserveAspectRatio=\"xMidYMid meet\"\n    >\n      <rect width=\"100%\" height=\"100%\" fill={Colors.secondary}/>\n      {lines.map((line, index) => (\n        <DrawingLine\n          key={index}\n          line={line}\n        />\n      ))}\n    </SVG>\n  );\n};\n\nconst DrawingLine: React.FC<{ line: Line }> = ({ line }) => {\n  const pathData = \"M \" +\n    line\n      .map(p => {\n        return `${p.x} ${p.y}`;\n      })\n      .join(\" L \");\n\n  return <Path d={pathData} />;\n}\nexport default Drawing;","import styled from 'styled-components/macro';\n\nexport const Wrapper = styled.div`\n  flex: 1;\n  touch-action: none;\n`\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport DrawingSVG from './DrawingSVG';\nimport { Wrapper } from './Drawing.style';\n\nconst viewBoxSize = {\n  width: 400,\n  height: 300,\n};\n\nconst Drawing: React.FC<{\n  onInputDown?: (point: Point) => void,\n  onInputMove?: (point: Point) => void,\n  isDrawing?: boolean,\n  lines: LinePath,\n}> = ({\n  onInputDown: onMouseDown,\n  onInputMove: onMouseMove,\n  lines,\n}) => {\n  const [isDrawing, setIsDrawing] = useState(false);\n  const drawingRef = useRef<HTMLDivElement>(null);\n\n  function handleMouseDown(mouseEvent: React.MouseEvent) {\n    mouseEvent.preventDefault();\n    setIsDrawing(true);\n    mouseEvent.button === 0 && onMouseDown!(relativePoint(mouseEvent));\n  }\n\n  function handleMouseMove(mouseEvent: React.MouseEvent) {\n    mouseEvent.preventDefault();\n    onMouseMove!(relativePoint(mouseEvent));\n  }\n\n  function handleTouchStart(touchEvent: React.TouchEvent) {\n    touchEvent.preventDefault();\n    setIsDrawing(true);\n    onMouseDown!(relativePoint(touchEvent.touches[0]));\n  }\n\n  function handleTouchMove(touchEvent: React.TouchEvent) {\n    touchEvent.preventDefault();\n    onMouseMove!(relativePoint(touchEvent.touches[0]));\n  }\n\n  function handleMouseUp() {\n    setIsDrawing(false);\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"mouseup\", handleMouseUp);\n    return () => {\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, []);\n\n  function relativePoint(event: React.MouseEvent | React.Touch) : Point {\n    const {\n      width,\n      height,\n      left,\n      top,\n    } = drawingRef!.current!.getBoundingClientRect();\n\n    const viewBoxRatio = viewBoxSize.height / viewBoxSize.width;\n    const boundsRatio = height / width;\n\n    const scale = viewBoxRatio < boundsRatio\n      ? width / viewBoxSize.width\n      : height / viewBoxSize.height\n\n    const offset = {\n      x: 0,\n      y: 0,\n    };\n    \n    if (viewBoxRatio > boundsRatio) {\n      offset.x += (width - (viewBoxSize.width * scale)) / 2;\n    } else {\n      offset.y += (height - (viewBoxSize.height * scale)) / 2;\n    }\n\n    return {\n      x: (event.clientX - offset.x) / scale - left,\n      y: (event.clientY - offset.y) / scale - top,\n    };\n  }\n\n  const downCallbacks = (onMouseDown && onMouseMove) ? {\n    onMouseDown: handleMouseDown,\n    onTouchStart: handleTouchStart,\n  } : {};\n  \n  const moveCallbacks = (isDrawing && onMouseDown && onMouseMove) ? {\n    onMouseMove: handleMouseMove,\n    onTouchMove: handleTouchMove,\n  } : {}\n\n  return (\n    <Wrapper\n      {...downCallbacks}\n      {...moveCallbacks}\n      ref={drawingRef}\n    >\n      <DrawingSVG lines={lines} />\n    </Wrapper>\n  );\n};\n\nexport default Drawing;","import styled from 'styled-components/macro';\n\nimport Colors from './Colors';\n\nexport const Wrapper = styled.div`\n  margin: 5px;\n  overflow: hidden;\n  cursor: crosshair;\n  display: flex;\n  justify-content: center;\n  flex: 1;\n  background: ${Colors.secondaryVariant};\n  border-radius: 10px;\n`\n","import React from 'react';\n\nimport Drawing from './Drawing';\nimport { Wrapper } from './DrawArea.style';\n\nconst DrawArea: React.FC<{\n  lines: LinePath,\n  onChange: (lines: LinePath) => void,\n}> = ({\n  lines,\n  onChange,\n}) => {\n  function handleInputDown(point: Point) {\n    onChange(lines.concat([[point]]))\n  }\n\n  function handleInputMove(point: Point) {\n    onChange([\n      ...lines.slice(0, lines.length - 1),\n      lines[lines.length - 1].concat([point]),\n    ]);\n  }\n\n  return (\n    <Wrapper>\n      <Drawing\n        onInputDown={handleInputDown}\n        onInputMove={handleInputMove}\n        lines={lines}\n      />\n    </Wrapper>\n\n  );\n}\n\nexport default DrawArea;\n","import styled, { css } from 'styled-components/macro';\n\nimport Colors from './Colors';\n\nexport const Wrapper = styled.div`\n  border: 3px solid ${Colors.secondaryVariant};\n  border-radius: 5px;\n  margin: 5px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n  position: relative;\n  overflow: auto;\n  margin-bottom: 20px;\n`\n\nexport const Node = styled.div<{ isSelected: boolean }>`\n  width: 20px;\n  height: 20px;\n  background: ${Colors.secondary};\n  border-radius: 100%;\n  border: 5px solid ${Colors.primary};\n  cursor: pointer;\n\n  :hover {\n    border-color: ${Colors.secondaryVariant};\n  }\n\n  ${({ isSelected }) => isSelected && css`\n    border-color: ${Colors.primaryVariant};\n    :hover {\n      border-color: ${Colors.primaryVariant};\n    }\n  `}\n`\nexport const Preview = styled.div`\n  border-radius: 10px;\n  border: 5px solid ${Colors.secondaryVariant};\n  overflow: hidden;\n  position: relative;\n  right: 122px;\n  bottom: 5px;\n  width: 100px;\n`\n\nexport const TextPreview = styled.div`\n  font-size: 10px;\n  height: 10px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  background: ${Colors.primaryVariant};\n  padding: 5px;\n  margin-top: -5px;\n`\n\nexport const NodeRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n`\n\nexport const NodeFork = styled.div`\n  display: flex;\n  flex: 1;\n`\n","import React, { useState, useCallback } from 'react';\n\nimport DrawingSVG from './DrawingSVG';\nimport {\n  Wrapper,\n  Node,\n  TextPreview,\n  Preview,\n  NodeRow,\n  NodeFork,\n} from './FlowChart.style';\n\nconst FlowChart: React.FC<{\n  panels: Panel[],\n  selected: number,\n  onNodeClick: (panel: Panel, index: number) => void,\n}> = ({\n  panels,\n  selected,\n  onNodeClick,\n}) => {\n  const [hoverId, setHoverIndex] = useState<number>(-1);\n  const [bounds, setBounds] = useState<Bounds>({\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0,\n  });\n\n  const wrapperRef = useCallback((node: HTMLDivElement) => {\n    if (node === null) return;\n    const { width, height, top, left } = node.getBoundingClientRect();\n    setBounds({ width, height, top, left });\n  }, []);\n\n  const PanelNode: React.FC<{\n    id: number,\n    position: { x: number, y: number },\n    depth: number,\n  }> = ({\n    id,\n    position,\n    depth,\n  }) => {\n    const panel = panels[id];\n\n    const xBranchOffset = bounds.width / depth**2;\n\n    return (\n      <NodeRow>\n        <Node\n          style={({\n            position: 'absolute',\n            top: `${position.y}px`,\n            left: `${bounds.width / 2 + position.x}px`,\n          })}\n          isSelected={selected === id}\n          onClick={() => onNodeClick(panel, id)}\n          onMouseEnter={() => setHoverIndex(id)}\n          onMouseLeave={() => setHoverIndex(-1)}\n        >\n          {hoverId === id && selected !== id && (\n            <PanelPreview panel={panel} />\n          )}\n        </Node>\n        {panel.nextId && (\n          <PanelNode\n            id={panel.nextId}\n            position={{\n              x: position.x,\n              y: position.y + 40,\n            }}\n            depth={depth}\n          />\n        )}\n        {panel.choices && (\n          <NodeFork>\n            {panel.choices.map((choice, index) => (\n              <PanelNode\n                key={choice.id}\n                id={choice.id}\n                position={{\n                  x: position.x - xBranchOffset + (2 * xBranchOffset * index) ,\n                  y: position.y + 40,\n                }}\n                depth={depth + 1}\n              />\n            ))}\n          </NodeFork>\n        )}\n      </NodeRow>\n    )\n  };\n\n  return (\n    <Wrapper ref={wrapperRef}>\n      <PanelNode\n        id={0}\n        depth={2}\n        position={({ x: 0, y: 10 })}\n      />\n    </Wrapper>\n  )\n};\n\nconst PanelPreview: React.FC<{\n  panel: Panel,\n}> = ({ panel }) => (\n  <Preview>\n    <DrawingSVG lines={panel.drawing}/>\n    <TextPreview>{panel.text}</TextPreview>\n  </Preview>\n);\n\nexport default FlowChart;","import styled from 'styled-components/macro';\n\nimport Colors from './Colors';\nimport { Row, Column } from './UI';\n\nexport const Wrapper = styled(Row)`\n  background: ${Colors.primary};\n  color: ${Colors.secondary};\n  flex: 1;\n\n  @media (orientation:portrait) {\n    flex-direction: column;\n  }\n`;\n\nexport const TextInput = styled.textarea`\n  all: unset;\n  background: ${Colors.primaryVariant};\n  padding: 10px;\n  border-radius: 10px;\n  margin: 5px;\n  height: 55px;\n\n  ::placeholder {\n    color: ${Colors.secondaryVariant}\n  }\n`;\n\nexport const DrawColumn = styled(Column)`\n  flex: 2;\n`;\n","import React, { useState, useEffect } from 'react';\n\nimport database from './database';\nimport {\n  Row,\n  Column,\n  Button,\n} from './UI';\nimport DrawArea from './DrawArea';\nimport FlowChart from './FlowChart';\nimport {\n  Wrapper,\n  TextInput,\n  DrawColumn,\n} from './Home.style';\n\nconst Home: React.FC = () => {\n  const [selected, setSelected] = useState<number>(0);\n  const [panels, setPanels] = useState<Panel[]>([{\n    drawing: [],\n    text: '',\n  }]);\n\n  function handlePublishClick() {\n    database.ref('stories').push(\n      {\n        panels: panels.map(panel => ({\n          ...(panel.choices ? {choices: JSON.stringify(panel.choices)} : {}),\n          ...(panel.nextId ? {nextId: panel.nextId} : {}),\n          drawing: JSON.stringify(panel.drawing),\n          text: panel.text,\n        })),\n      }\n    ).then(() => console.log('done publishing'));\n  }\n\n  function handleTextChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n    const newPanels = panels.slice(0);\n    newPanels[selected] = {\n      ...newPanels[selected],\n      text: event.target.value,\n    };\n\n    setPanels(newPanels);\n  }\n\n  function handleLoadClick() {    \n    database.ref('stories').limitToLast(1).once('value').then(snapshot => {\n      const val = snapshot.val();\n      if (!val) return;\n\n      const panels = Object.values<{ panels: {\n        drawing: string,\n        choices: string,\n        text: string,\n        nextId: number,\n      }[] }>(val)[0].panels;\n\n      setPanels(panels.map(panel => ({\n        drawing: JSON.parse(panel.drawing),\n        choices: panel.choices ? JSON.parse(panel.choices): undefined,\n        text: panel.text,\n        nextId: panel.nextId,\n      })));\n    })\n  }\n\n  function handleNodeClick(panel: Panel, index: number) {\n    setSelected(index);\n  }\n\n  function handleNewPanelClick() {\n    if (panels[selected].nextId || panels[selected].choices) return;\n\n    setPanels(prevPanels => {\n      const newPanels = prevPanels.slice(0);\n      newPanels[selected].nextId = panels.length;\n      newPanels.push({\n        drawing: [],\n        text: '',\n      });\n\n      return newPanels;\n    });\n  }\n\n  function handleNewChoiceClick() {\n    if (panels[selected].nextId || panels[selected].choices) return;\n\n    setPanels(prevPanels => {\n      const newPanels = prevPanels.slice(0);\n      newPanels[selected].choices = [\n        {id: newPanels.length},\n        {id: newPanels.length + 1},\n      ];\n      newPanels.push({\n        drawing: [],\n        text: '',\n      });\n      newPanels.push({\n        drawing: [],\n        text: '',\n      });\n\n      return newPanels;\n    });\n  }\n\n  function handleDrawingChange(lines: LinePath) {\n    setPanels(prevPanels => {\n      const newPanels = prevPanels.slice(0);\n      newPanels[selected] = {\n        ...newPanels[selected],\n        drawing: lines,\n      };\n      return newPanels;\n    });\n  }\n\n  useEffect(() => {\n    setSelected(panels.length - 1);\n  }, [panels.length]);\n\n  return (\n    <Wrapper>\n      <DrawColumn>\n        <DrawArea\n          lines={panels[selected].drawing}\n          onChange={handleDrawingChange}\n        />\n        <TextInput\n          onChange={handleTextChange}\n          value={panels[selected].text}\n          placeholder=\"Insert panel text here\"\n        />\n        <Row>\n          <Button onClick={handleLoadClick}>[Load From Database]</Button>\n          <Button onClick={handlePublishClick}>Publish</Button>\n        </Row>\n      </DrawColumn>\n      <Column>\n        <Row>\n          <Button onClick={handleNewChoiceClick}>+ Choice</Button>\n          <Button onClick={handleNewPanelClick}>+ Panel</Button>\n        </Row>\n        <FlowChart\n          panels={panels}\n          onNodeClick={handleNodeClick}\n          selected={selected}\n        />\n      </Column>\n    </Wrapper>\n  )\n}\n\nexport default Home;","import { createGlobalStyle } from 'styled-components'\n\nimport Colors from './Colors';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background: ${Colors.primary};\n  }\n\n  #root {\n    display: flex;\n    height: 100vh;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Home from './Home';\nimport { GlobalStyle } from './index.style';\n\nReactDOM.render(\n  <>\n    <GlobalStyle/>\n    <Home />\n  </>\n, document.getElementById('root'));\n"],"sourceRoot":""}