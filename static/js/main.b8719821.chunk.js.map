{"version":3,"sources":["colors.ts","components/App/Global.style.ts","components/UI/UI.style.ts","components/StoryCreator/StoryCreator.style.ts","bresenham.ts","components/Drawing/Drawing.style.ts","components/Drawing/Drawing.tsx","components/Drawing/index.ts","components/PanelConnections/PanelConnections.style.ts","components/Thumbnail/Thumbnail.style.ts","components/Thumbnail/index.ts","components/Thumbnail/Thumbnail.tsx","components/PanelConnections/index.ts","components/PanelConnections/PanelConnections.tsx","components/StoryCreator/StoryCreator.tsx","components/StoryPlayer/StoryPlayer.style.ts","components/StoryPlayer/index.ts","components/StoryPlayer/StoryPlayer.tsx","components/App/App.tsx","components/App/index.ts","index.tsx"],"names":["colors","primary","primaryVariant","darken","secondary","lighten","secondaryVariant","GlobalStyle","createGlobalStyle","_templateObject","Colors","ButtonBase","styled","button","withConfig","displayName","componentId","props","onClick","css","UI_style_templateObject","RoundButton","Base","div","Row","Column","Wrapper","TextInput","textarea","bresenham","pointA","pointB","points","deltaX","x","deltaY","y","absDeltaY","Math","abs","absDeltaX","signX","signY","eps","push","DrawingImage","img","Canvas","canvas","viewBoxSize","height","width","Drawing","_ref","onChange","dataURL","onPressEnd","_useState","useState","_useState2","Object","slicedToArray","context","setContext","_useState3","_useState4","setCanvas","_useState5","_useState6","isDrawing","setIsDrawing","_useState7","_useState8","prevPosition","setPrevPosition","draw","event","position","_canvas$getBoundingCl","getBoundingClientRect","left","top","viewBoxRatio","boundsRatio","scale","offset","floor","clientX","clientY","relativePoint","line","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","point","value","fillRect","err","return","toDataURL","startDrawing","stopDrawing","useEffect","fillStyle","image","Image","onload","drawImage","src","react_default","a","createElement","Drawing_style_Wrapper","ref","instance","getContext","onMouseMove","mouseEvent","onTouchMove","touchEvent","touches","onTouchStart","onMouseDown","onMouseUp","onTouchEnd","onMouseOut","PanelsWrapper","NewPannelText","common","Thumbnail_style_templateObject","ThumbnailImage","Placeholder","Thumbnail","PanelConnections","currentPanel","prevPanel","nextPanels","onConnectionClick","onNewPanelClick","PanelConnections_style_Wrapper","components_Thumbnail","map","panel","key","id","keys","toConsumableArray","Array","length","detaultStory","panels","nextIds","text","StoryCreator","storyRef","useFirebaseApp","firestore","collection","doc","story","useFirestoreDoc","data","selected","setSelected","setPanels","shouldUpload","setShouldUpload","_updateStory","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","update","stop","apply","this","arguments","updateStory","Fragment","prevId","components_Drawing","newPanels","slice","objectSpread","target","placeholder","components_PanelConnections","prevPanels","CurrentPanelColumn","PanelWrapper","PanelImage","PanelText","StoryPlayer","current","setCurrent","StoryPlayer_style_Wrapper","alt","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","path","relativePath","concat","process","App","reactfire","initPerformance","wouter","params","fallback","traceId","components_StoryCreator_StoryCreator","components_StoryPlayer","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.b8719821.chunk.js","sourcesContent":["import { darken, lighten } from 'polished'\r\n\r\nconst primary = '#1c4265'\r\nconst primaryVariant = darken(0.15, primary)\r\nconst secondary = lighten(0.5, primary)\r\nconst secondaryVariant = lighten(0.15, primary)\r\n\r\nexport default {\r\n  primary,\r\n  primaryVariant,\r\n  secondary,\r\n  secondaryVariant,\r\n}\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nimport Colors from '../../colors'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    background: ${Colors.primary};\r\n  }\r\n\r\n  #root {\r\n    display: flex;\r\n    height: 100vh;\r\n  }\r\n\r\n  * {\r\n    user-select: none;\r\n  }\r\n`\r\n","import styled, {\r\n  css,\r\n} from 'styled-components/macro'\r\n\r\nimport Colors from '../../colors'\r\n\r\nconst ButtonBase = styled.button`\r\n  all: unset;\r\n  background: ${Colors.secondaryVariant};\r\n  margin: 5px;\r\n  text-align: center;\r\n  border: solid 3px ${Colors.primary};\r\n\r\n  ${props => props.onClick && css`\r\n    cursor: pointer;\r\n\r\n    border-color: ${Colors.primaryVariant};\r\n\r\n    :hover {\r\n      border-color: ${Colors.secondaryVariant};\r\n    }\r\n\r\n    :active {\r\n      background: ${Colors.primary};\r\n      border-color: ${Colors.primaryVariant};\r\n    }\r\n  `}\r\n`\r\n\r\nexport const Button = styled(ButtonBase)`\r\n  flex: 1;\r\n  border-radius: 5px;\r\n  padding: 7px;\r\n`\r\n\r\nexport const RoundButton = styled(ButtonBase)`\r\n  border-radius: 100%;\r\n  flex: unset;\r\n  overflow: hidden;\r\n  height: 80px;\r\n  width: 80px;\r\n\r\n  @media (orientation:portrait) {\r\n    height: 50px;\r\n    width: 50px;\r\n  }\r\n`\r\n\r\nconst Base = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nexport const Row = styled(Base)``\r\n\r\nexport const Column = styled(Base)`\r\n  flex: 1;\r\n  flex-direction: column;\r\n`\r\n","import styled from 'styled-components/macro'\r\n\r\nimport Colors from '../../colors'\r\nimport { Row } from '../UI'\r\n\r\nexport const Wrapper = styled(Row)`\r\n  background: ${Colors.primary};\r\n  color: ${Colors.secondary};\r\n  flex: 1;\r\n\r\n  @media (orientation:portrait) {\r\n    flex-direction: column;\r\n  }\r\n`\r\n\r\nexport const TextInput = styled.textarea`\r\n  all: unset;\r\n  background: ${Colors.primaryVariant};\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  margin: 5px;\r\n  height: 55px;\r\n\r\n  ::placeholder {\r\n    color: ${Colors.secondaryVariant}\r\n  }\r\n`\r\n","function bresenham (pointA: Point, pointB: Point) {\r\n  const points: Point[] = []\r\n  const deltaX = pointB.x - pointA.x\r\n  const deltaY = pointB.y - pointA.y\r\n  const absDeltaY = Math.abs(deltaX)\r\n  const absDeltaX = Math.abs(deltaY)\r\n  const signX = deltaX > 0 ? 1 : -1\r\n  const signY = deltaY > 0 ? 1 : -1\r\n\r\n  let eps = 0\r\n\r\n  if (absDeltaY > absDeltaX) {\r\n    for (let x = pointA.x, y = pointA.y; signX < 0 ? x >= pointB.x : x <= pointB.x; x += signX) {\r\n      points.push({ x, y })\r\n      eps += absDeltaX\r\n      if ((eps << 1) >= absDeltaY) {\r\n        y += signY\r\n        eps -= absDeltaY\r\n      }\r\n    }\r\n  } else {\r\n    for (let x = pointA.x, y = pointA.y; signY < 0 ? y >= pointB.y : y <= pointB.y; y += signY) {\r\n      points.push({ x, y })\r\n      eps += absDeltaY\r\n      if ((eps << 1) >= absDeltaX) {\r\n        x += signX\r\n        eps -= absDeltaX\r\n      }\r\n    }\r\n  }\r\n  return points\r\n}\r\n\r\nexport default bresenham\r\n","import styled from 'styled-components/macro'\r\n\r\nimport Colors from '../../colors'\r\n\r\nexport const Wrapper = styled.div`\r\n  flex: 1;\r\n  background: ${Colors.secondaryVariant};\r\n  position: relative;\r\n  overflow: hidden;\r\n  margin: 5px;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const DrawingImage = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: contain;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  image-rendering: pixelated;\r\n`\r\n\r\nexport const Canvas = styled.canvas`\r\n  cursor: crosshair;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  opacity: 0;\r\n  touch-action: none;\r\n`\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n} from 'react'\r\nimport bresenham from '../../bresenham'\r\n\r\nimport Colors from '../../colors'\r\nimport {\r\n  Canvas,\r\n  DrawingImage,\r\n  Wrapper,\r\n} from './Drawing.style'\r\n\r\nconst viewBoxSize = {\r\n  height: 60,\r\n  width: 80,\r\n}\r\n\r\ninterface Props {\r\n  onChange: (dataURL: string) => void;\r\n  dataURL: string;\r\n  onPressEnd: () => void;\r\n}\r\n\r\nconst Drawing: React.FC<Props> = ({\r\n  onChange,\r\n  dataURL,\r\n  onPressEnd,\r\n}) => {\r\n  const [context, setContext] = useState<CanvasRenderingContext2D>()\r\n  const [canvas, setCanvas] = useState<HTMLCanvasElement>()\r\n  const [isDrawing, setIsDrawing] = useState(false)\r\n  const [prevPosition, setPrevPosition] = useState<Point>()\r\n\r\n  useEffect(() => {\r\n    if (!context || !canvas) {\r\n      return\r\n    }\r\n\r\n    if (!dataURL) {\r\n      context.fillStyle = Colors.secondary\r\n      context.fillRect(0, 0, canvas.width, canvas.height)\r\n\r\n      onChange(canvas.toDataURL())\r\n    }\r\n    context.fillStyle = Colors.primary\r\n\r\n    // When dataURL is updated, we update the canvas with the new image.\r\n    // But only when a new full image is being loaded, not when we are drawing.\r\n    if (!isDrawing) {\r\n      const image = new Image()\r\n      image.onload = () => context.drawImage(image, 0, 0)\r\n      image.src = dataURL\r\n    }\r\n  }, [context, canvas, dataURL, isDrawing, onChange])\r\n\r\n  function relativePoint (event: React.MouseEvent | React.Touch): Point {\r\n    if (!canvas) {\r\n      return { x: 0, y: 0 }\r\n    }\r\n\r\n    const {\r\n      width,\r\n      height,\r\n      left,\r\n      top,\r\n    } = canvas.getBoundingClientRect()\r\n\r\n    const viewBoxRatio = viewBoxSize.height / viewBoxSize.width\r\n    const boundsRatio = height / width\r\n\r\n    const scale = viewBoxRatio < boundsRatio\r\n      ? width / viewBoxSize.width\r\n      : height / viewBoxSize.height\r\n\r\n    const offset: Point = {\r\n      x: left,\r\n      y: top,\r\n    }\r\n\r\n    if (viewBoxRatio > boundsRatio) {\r\n      offset.x += (width - (viewBoxSize.width * scale)) / 2\r\n    } else {\r\n      offset.y += (height - (viewBoxSize.height * scale)) / 2\r\n    }\r\n\r\n    return {\r\n      x: Math.floor((event.clientX - offset.x) / scale),\r\n      y: Math.floor((event.clientY - offset.y) / scale),\r\n    }\r\n  }\r\n\r\n  function setCanvasRef (instance: HTMLCanvasElement | null) {\r\n    if (!instance || canvas || context) { return }\r\n\r\n    setCanvas(instance)\r\n    setContext(instance.getContext('2d') || undefined)\r\n  }\r\n\r\n  function draw (event: React.MouseEvent | React.Touch) {\r\n    if (!context || !canvas) { return }\r\n\r\n    const position: Point = relativePoint(event)\r\n    const line = bresenham(prevPosition || position, position)\r\n\r\n    for (const point of line) {\r\n      context.fillRect(point.x, point.y, 1, 1)\r\n    }\r\n\r\n    onChange(canvas.toDataURL())\r\n\r\n    setPrevPosition(position)\r\n  }\r\n\r\n  function handleMouseMove (mouseEvent: React.MouseEvent) {\r\n    if (isDrawing) {\r\n      draw(mouseEvent)\r\n    }\r\n  }\r\n\r\n  function handleTouchMove (touchEvent: React.TouchEvent) {\r\n    draw(touchEvent.touches[0])\r\n  }\r\n\r\n  function startDrawing () {\r\n    setIsDrawing(true)\r\n  }\r\n\r\n  function stopDrawing () {\r\n    setIsDrawing(false)\r\n    setPrevPosition(undefined)\r\n    onPressEnd()\r\n  }\r\n\r\n  function handleMouseDown (mouseEvent: React.MouseEvent) {\r\n    startDrawing()\r\n    draw(mouseEvent)\r\n  }\r\n\r\n  function handleTouchStart (touchEvent: React.TouchEvent) {\r\n    startDrawing()\r\n    draw(touchEvent.touches[0])\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      {dataURL && (\r\n        <DrawingImage src={dataURL} />\r\n      )}\r\n      <Canvas\r\n        ref={setCanvasRef}\r\n        onMouseMove={handleMouseMove}\r\n        onTouchMove={handleTouchMove}\r\n        onTouchStart={handleTouchStart}\r\n        onMouseDown={handleMouseDown}\r\n        onMouseUp={stopDrawing}\r\n        onTouchEnd={stopDrawing}\r\n        onMouseOut={stopDrawing}\r\n        width={viewBoxSize.width}\r\n        height={viewBoxSize.height}\r\n      />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Drawing\r\n","import Drawing from './Drawing'\r\nexport default Drawing\r\n","import styled from 'styled-components/macro'\r\n\r\nimport { Column, Row } from '../UI'\r\n\r\nexport const Wrapper = styled(Column)`\r\n  flex-direction: column;\r\n  margin: 10px;\r\n  display: flex;\r\n  flex: unset;\r\n\r\n  @media (orientation:portrait) {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nexport const PanelsWrapper = styled(Row)`\r\n  @media (orientation:portrait) {\r\n    flex-direction: column;\r\n  }\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nexport const NewPannelText = styled.div`\r\n  margin-top: -22px;\r\n  font-size: 5em;\r\n\r\n  @media (orientation:portrait) {\r\n    font-size: 3.8em;\r\n  }\r\n`\r\n","import styled, { css } from 'styled-components/macro'\r\n\r\nimport Colors from '../../colors'\r\n\r\nconst common = css`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nexport const ThumbnailImage = styled.img`\r\n  ${common}\r\n  flex: 1;\r\n`\r\n\r\nexport const Placeholder = styled.div`\r\n  ${common}\r\n  padding-bottom: 75%;\r\n  background-color: ${Colors.secondary};\r\n`\r\n","import Thumbnail from './Thumbnail'\r\nexport default Thumbnail\r\n","import React from 'react'\r\n\r\nimport {\r\n  Placeholder,\r\n  ThumbnailImage,\r\n} from './Thumbnail.style'\r\n\r\nconst Thumbnail: React.FC<{ src: string }> = ({ src }) => (\r\n  src ? (\r\n    <ThumbnailImage src={src} />\r\n  ) : (\r\n    <Placeholder />\r\n  )\r\n)\r\n\r\nexport default Thumbnail\r\n","import PanelConnections from './PanelConnections'\r\nexport default PanelConnections\r\n","import React from 'react'\r\n\r\nimport {\r\n  NewPannelText,\r\n  PanelsWrapper,\r\n  Wrapper,\r\n} from './PanelConnections.style'\r\nimport { RoundButton } from '../UI'\r\nimport Thumbnail from '../Thumbnail'\r\n\r\nconst MAX_NEXT_PANELS = 2\r\n\r\nconst PanelConnections: React.FC<{\r\n  prevPanel?: Panel;\r\n  currentPanel: Panel;\r\n  nextPanels: Panel[];\r\n  onConnectionClick: (panel: Panel) => void;\r\n  onNewPanelClick: () => void;\r\n}> = ({\r\n  currentPanel,\r\n  prevPanel,\r\n  nextPanels,\r\n  onConnectionClick,\r\n  onNewPanelClick,\r\n}) => (\r\n  <Wrapper>\r\n    {prevPanel && (\r\n      <PanelsWrapper>\r\n        <RoundButton onClick={() => onConnectionClick(prevPanel)}>\r\n          <Thumbnail src={prevPanel.dataURL} />\r\n        </RoundButton>\r\n      </PanelsWrapper>\r\n    )}\r\n    {!prevPanel && (\r\n      <PanelsWrapper>\r\n        <RoundButton />\r\n      </PanelsWrapper>\r\n    )}\r\n    <PanelsWrapper>\r\n      <RoundButton>\r\n        <Thumbnail src={currentPanel.dataURL} />\r\n      </RoundButton>\r\n    </PanelsWrapper>\r\n    <PanelsWrapper>\r\n      {nextPanels.map(panel => (\r\n        <RoundButton\r\n          key={panel.id}\r\n          onClick={() => onConnectionClick(panel)}\r\n        >\r\n          <Thumbnail src={panel.dataURL} />\r\n        </RoundButton>\r\n      ))}\r\n      {\r\n        // Generate an array of numbers from 0 to MAX_NEXT_PANELS\r\n        Object.keys([...Array(MAX_NEXT_PANELS - nextPanels.length)])\r\n          .map(panel => (\r\n            <RoundButton\r\n              key={panel}\r\n              onClick={onNewPanelClick}\r\n            >\r\n              <NewPannelText>+</NewPannelText>\r\n            </RoundButton>\r\n          ))\r\n      }\r\n    </PanelsWrapper>\r\n  </Wrapper>\r\n)\r\n\r\nexport default PanelConnections\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n} from 'react'\r\nimport {\r\n  useFirestoreDoc,\r\n  useFirebaseApp,\r\n} from 'reactfire'\r\n\r\nimport {\r\n  TextInput,\r\n  Wrapper,\r\n} from './StoryCreator.style'\r\nimport {\r\n  Column,\r\n} from '../UI'\r\nimport Drawing from '../Drawing'\r\nimport PanelConnections from '../PanelConnections'\r\n\r\nconst defaultPanel: Panel = {\r\n  id: 0,\r\n  nextIds: [],\r\n  text: '',\r\n  dataURL: '',\r\n}\r\n\r\nconst detaultStory: Story = {\r\n  panels: [defaultPanel],\r\n}\r\n\r\ninterface Props {\r\n  id?: string;\r\n}\r\n\r\nconst StoryCreator: React.FC<Props> = ({ id }) => {\r\n  const firebaseApp = useFirebaseApp()\r\n\r\n  const storyRef = firebaseApp\r\n    .firestore()\r\n    .collection('stories')\r\n    .doc(id)\r\n\r\n  // Had to specify the DocumentSnapshot type error to a bug in reactfire's typings\r\n  const story = useFirestoreDoc<firebase.firestore.DocumentSnapshot>(storyRef)\r\n    .data() as Story || detaultStory\r\n\r\n  const [selected, setSelected] = useState<number>(0)\r\n  const [panels, setPanels] = useState<Panel[]>(story.panels)\r\n  const [shouldUpload, setShouldUpload] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (!shouldUpload) {\r\n      return\r\n    }\r\n\r\n    setShouldUpload(false)\r\n\r\n    async function updateStory () {\r\n      storyRef.update('panels', panels)\r\n    }\r\n\r\n    updateStory()\r\n  }, [panels, storyRef, shouldUpload])\r\n\r\n  if (!story) {\r\n    return <>Story not found</>\r\n  }\r\n\r\n  const currentPanel = panels[selected]\r\n  const prevPanel = (currentPanel.prevId !== undefined) ? panels[currentPanel.prevId] : undefined\r\n  const nextPanels = currentPanel.nextIds.map(id => panels[id])\r\n\r\n  function handleTextChange (event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n    const newPanels = panels.slice(0)\r\n    newPanels[selected] = {\r\n      ...newPanels[selected],\r\n      text: event.target.value,\r\n    }\r\n\r\n    setPanels(newPanels)\r\n  }\r\n\r\n  function handleNewPanelClick () {\r\n    setPanels(prevPanels => {\r\n      const newPanels = prevPanels.slice(0)\r\n\r\n      newPanels[selected].nextIds.push(newPanels.length)\r\n      newPanels.push({\r\n        dataURL: '',\r\n        id: newPanels.length,\r\n        nextIds: [],\r\n        prevId: selected,\r\n        text: '',\r\n      })\r\n\r\n      return newPanels\r\n    })\r\n  }\r\n\r\n  function handleCanvasChange (dataURL: string) {\r\n    const newPanels = panels.slice(0)\r\n    newPanels[selected] = {\r\n      ...newPanels[selected],\r\n      dataURL: dataURL || '',\r\n    }\r\n\r\n    setPanels(newPanels)\r\n  }\r\n\r\n  function handlePanelConnectionClick (panel: Panel) {\r\n    setSelected(panel.id)\r\n  }\r\n\r\n  function handlePressEnd () {\r\n    setShouldUpload(true)\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Column>\r\n        <Drawing\r\n          onChange={handleCanvasChange}\r\n          onPressEnd={handlePressEnd}\r\n          dataURL={currentPanel.dataURL}\r\n        />\r\n        <TextInput\r\n          onChange={handleTextChange}\r\n          value={currentPanel.text}\r\n          placeholder=\"Insert panel text here\"\r\n        />\r\n      </Column>\r\n      <PanelConnections\r\n        prevPanel={prevPanel}\r\n        currentPanel={currentPanel}\r\n        nextPanels={nextPanels}\r\n        onConnectionClick={handlePanelConnectionClick}\r\n        onNewPanelClick={handleNewPanelClick}\r\n      />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default StoryCreator\r\n","import styled from 'styled-components/macro'\r\n\r\nimport Colors from '../../colors'\r\nimport {\r\n  Row,\r\n  Column,\r\n} from '../UI'\r\n\r\nexport const Wrapper = styled(Row)`\r\n  width: 100%;\r\n  padding: 10px;\r\n`\r\n\r\nexport const CurrentPanelColumn = styled(Column)`\r\n  flex: 2;\r\n`\r\n\r\nexport const PanelWrapper = styled.div`\r\n  margin: 10px;\r\n  border: solid 5px ${Colors.primaryVariant};\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const PanelImage = styled.img`\r\n  width: 100%;\r\n  image-rendering: pixelated;\r\n  display: block;\r\n`\r\n\r\nexport const PanelText = styled.div`\r\n  background: ${Colors.primaryVariant};\r\n  padding: 10px;\r\n  color: ${Colors.secondary};\r\n`\r\n","import StoryPlayer from './StoryPlayer'\r\nexport default StoryPlayer\r\n","import React, {\r\n  useState,\r\n} from 'react'\r\nimport {\r\n  useFirestoreDoc,\r\n  useFirebaseApp,\r\n} from 'reactfire'\r\n\r\nimport {\r\n  PanelImage,\r\n  Wrapper,\r\n  PanelWrapper,\r\n  CurrentPanelColumn,\r\n  PanelText,\r\n} from './StoryPlayer.style'\r\nimport { Column } from '../UI'\r\n\r\ninterface Props {\r\n  id?: string;\r\n}\r\n\r\nconst StoryPlayer: React.FC<Props> = ({ id }) => {\r\n  const [current, setCurrent] = useState<number>(0)\r\n\r\n  const firebaseApp = useFirebaseApp()\r\n  const storyRef = firebaseApp\r\n    .firestore()\r\n    .collection('stories')\r\n    .doc(id)\r\n\r\n  // Had to specify the DocumentSnapshot type error to a bug in reactfire's typings\r\n  const story = useFirestoreDoc<firebase.firestore.DocumentSnapshot>(storyRef)\r\n    .data() as Story | undefined\r\n\r\n  if (!story) {\r\n    return (\r\n      <>Story not found</>\r\n    )\r\n  }\r\n\r\n  const currentPanel = story.panels[current]\r\n\r\n  return (\r\n    <Wrapper>\r\n      {currentPanel && (\r\n        <CurrentPanelColumn>\r\n          <PanelWrapper>\r\n            <PanelImage\r\n              src={currentPanel.dataURL}\r\n              alt={currentPanel.text}\r\n            />\r\n            <PanelText>\r\n              {currentPanel.text}\r\n            </PanelText>\r\n          </PanelWrapper>\r\n        </CurrentPanelColumn>\r\n      )}\r\n      <Column>\r\n        {currentPanel.nextIds && currentPanel.nextIds.map(id => (\r\n          <PanelWrapper key={id}>\r\n            <PanelImage\r\n              src={story.panels[id].dataURL}\r\n              alt={story.panels[id].text}\r\n              onClick={() => setCurrent(id)}\r\n            />\r\n            <PanelText>\r\n              {story.panels[id].text}\r\n            </PanelText>\r\n          </PanelWrapper>\r\n        ))}\r\n      </Column>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default StoryPlayer\r\n","import React from 'react'\r\nimport { Route } from 'wouter'\r\nimport {\r\n  FirebaseAppProvider,\r\n  SuspenseWithPerf,\r\n} from 'reactfire'\r\nimport 'firebase/performance'\r\nimport 'firebase/firestore'\r\n\r\nimport { GlobalStyle } from './Global.style'\r\nimport StoryCreator from '../StoryCreator/StoryCreator'\r\nimport StoryPlayer from '../StoryPlayer'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyC5mVxaorL_LmNWasC5LNmAC3cmlQ-5vFM',\r\n  authDomain: 'story-maker-85706.firebaseapp.com',\r\n  databaseURL: 'https://story-maker-85706.firebaseio.com',\r\n  projectId: 'story-maker-85706',\r\n  storageBucket: 'story-maker-85706.appspot.com',\r\n  messagingSenderId: '105986550181',\r\n  appId: '1:105986550181:web:81ec40d053faad45',\r\n}\r\n\r\nconst path = (relativePath = '') => `${process.env.PUBLIC_URL}/${relativePath}`\r\n\r\nconst App: React.FC = () => (\r\n  <FirebaseAppProvider firebaseConfig={firebaseConfig} initPerformance>\r\n    <GlobalStyle/>\r\n    <Route path={path('story/:id/edit')}>\r\n      {params => (\r\n        <SuspenseWithPerf\r\n          fallback={'loading...'}\r\n          traceId={'load-story-player'}\r\n        >\r\n          <StoryCreator id={params ? params.id : undefined} />\r\n        </SuspenseWithPerf>\r\n      )}\r\n    </Route>\r\n    <Route path={path('story/:id')}>\r\n      {params => (\r\n        <SuspenseWithPerf\r\n          fallback={'loading...'}\r\n          traceId={'load-story-creaor'}\r\n        >\r\n          <StoryPlayer id={params ? params.id : undefined} />\r\n        </SuspenseWithPerf>\r\n      )}\r\n    </Route>\r\n  </FirebaseAppProvider>\r\n)\r\n\r\nexport default App\r\n","import App from './App'\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './components/App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}