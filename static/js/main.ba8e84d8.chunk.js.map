{"version":3,"sources":["database.ts","Colors.ts","UI.ts","FlowChart.style.ts","FlowChart.tsx","Home.style.ts","Canvas.style.ts","Canvas.tsx","Home.tsx","index.style.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","Colors","primary","primaryVariant","darken","secondary","lighten","secondaryVariant","Button","styled","button","withConfig","displayName","componentId","Row","div","Column","Wrapper","Node","_ref","isSelected","css","_templateObject","Preview","TextPreview","NodeRow","NodeFork","PanelPreview","_ref3","panel","react_default","a","createElement","text","FlowChart","panels","selected","onNodeClick","_useState","useState","_useState2","Object","slicedToArray","hoverId","setHoverIndex","_useState3","width","height","top","left","_useState4","bounds","setBounds","wrapperRef","useCallback","node","_node$getBoundingClie","getBoundingClientRect","ref","PanelNode","_ref2","id","position","depth","xBranchOffset","Math","pow","style","concat","y","x","onClick","onMouseEnter","onMouseLeave","FlowChart_PanelPreview","nextId","choices","map","choice","index","key","TextInput","textarea","DrawColumn","canvas","viewBoxSize","Canvas","onChange","dataURL","context","setContext","setCanvas","_useState5","_useState6","isDrawing","setIsDrawing","_useState7","_useState8","prevPosition","setPrevPosition","handleMouseUp","undefined","toDataURL","closePath","useEffect","clearCanvas","fillStyle","fillRect","image","Image","onload","drawImage","src","Canvas_style_Wrapper","instance","getContext","onMouseMove","mouseEvent","event","_getBoundingClientRec","viewBoxRatio","boundsRatio","scale","offset","clientX","clientY","relativePoint","moveTo","lineTo","strokeStyle","lineWidth","filter","stroke","onMouseDown","beginPath","onMouseUp","onMouseOut","Home","setSelected","drawing","setPanels","length","Home_style_Wrapper","src_Canvas","prevPanels","newPanels","slice","objectSpread","target","value","placeholder","limitToLast","once","then","snapshot","val","values","JSON","parse","push","stringify","console","log","src_FlowChart","GlobalStyle","createGlobalStyle","index_style_templateObject","ReactDOM","render","Fragment","src_Home","document","getElementById"],"mappings":"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","file":"static/js/main.ba8e84d8.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyC5mVxaorL_LmNWasC5LNmAC3cmlQ-5vFM',\n  authDomain: 'story-maker-85706.firebaseapp.com',\n  databaseURL: 'https://story-maker-85706.firebaseio.com',\n  projectId: 'story-maker-85706',\n  storageBucket: 'story-maker-85706.appspot.com',\n  messagingSenderId: '105986550181',\n  appId: '1:105986550181:web:81ec40d053faad45'\n});\n\nexport default firebase.database();","import { darken, lighten } from 'polished';\n\nconst primary = '#4c7d55';\nconst primaryVariant = darken(0.15, primary);\nconst secondary = lighten(0.5, primary);\nconst secondaryVariant = lighten(0.15, primary);\n\nexport default {\n  primary,\n  primaryVariant,\n  secondary,\n  secondaryVariant,\n}\n","import styled from 'styled-components/macro';\n\nimport Colors from './Colors';\n\nexport const Button = styled.button`\n  all: unset;\n  flex: 1;\n  padding: 7px;\n  background: ${Colors.secondaryVariant};\n  border-radius: 5px;\n  margin: 5px;\n  text-align: center;\n  cursor: pointer;\n  border: solid 3px ${Colors.secondaryVariant};\n  \n  :hover {\n    background: ${Colors.primary};\n  }\n  \n  :active {\n    border-color: ${Colors.primaryVariant};\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n`;\n\nexport const Column = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n","import styled, { css } from 'styled-components/macro';\n\nimport Colors from './Colors';\n\nexport const Wrapper = styled.div`\n  border: 3px solid ${Colors.secondaryVariant};\n  border-radius: 5px;\n  margin: 5px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n  position: relative;\n  overflow: auto;\n  margin-bottom: 20px;\n`\n\nexport const Node = styled.div<{ isSelected: boolean }>`\n  width: 20px;\n  height: 20px;\n  background: ${Colors.secondary};\n  border-radius: 100%;\n  border: 5px solid ${Colors.primary};\n  cursor: pointer;\n\n  :hover {\n    border-color: ${Colors.secondaryVariant};\n  }\n\n  ${({ isSelected }) => isSelected && css`\n    border-color: ${Colors.primaryVariant};\n    :hover {\n      border-color: ${Colors.primaryVariant};\n    }\n  `}\n`\nexport const Preview = styled.div`\n  border-radius: 10px;\n  border: 5px solid ${Colors.secondaryVariant};\n  overflow: hidden;\n  position: relative;\n  right: 122px;\n  bottom: 5px;\n  width: 100px;\n`\n\nexport const TextPreview = styled.div`\n  font-size: 10px;\n  height: 10px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  background: ${Colors.primaryVariant};\n  padding: 5px;\n  margin-top: -5px;\n`\n\nexport const NodeRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n`\n\nexport const NodeFork = styled.div`\n  display: flex;\n  flex: 1;\n`\n","import React, { useState, useCallback } from 'react';\n\nimport {\n  Wrapper,\n  Node,\n  TextPreview,\n  Preview,\n  NodeRow,\n  NodeFork,\n} from './FlowChart.style';\n\nconst FlowChart: React.FC<{\n  panels: Panel[],\n  selected: number,\n  onNodeClick: (panel: Panel, index: number) => void,\n}> = ({\n  panels,\n  selected,\n  onNodeClick,\n}) => {\n  const [hoverId, setHoverIndex] = useState<number>(-1);\n  const [bounds, setBounds] = useState<Bounds>({\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0,\n  });\n\n  const wrapperRef = useCallback((node: HTMLDivElement) => {\n    if (node === null) return;\n    const { width, height, top, left } = node.getBoundingClientRect();\n    setBounds({ width, height, top, left });\n  }, []);\n\n  const PanelNode: React.FC<{\n    id: number,\n    position: { x: number, y: number },\n    depth: number,\n  }> = ({\n    id,\n    position,\n    depth,\n  }) => {\n    const panel = panels[id];\n\n    const xBranchOffset = bounds.width / depth**2;\n\n    return (\n      <NodeRow>\n        <Node\n          style={({\n            position: 'absolute',\n            top: `${position.y}px`,\n            left: `${bounds.width / 2 + position.x}px`,\n          })}\n          isSelected={selected === id}\n          onClick={() => onNodeClick(panel, id)}\n          onMouseEnter={() => setHoverIndex(id)}\n          onMouseLeave={() => setHoverIndex(-1)}\n        >\n          {hoverId === id && selected !== id && (\n            <PanelPreview panel={panel} />\n          )}\n        </Node>\n        {panel.nextId && (\n          <PanelNode\n            id={panel.nextId}\n            position={{\n              x: position.x,\n              y: position.y + 40,\n            }}\n            depth={depth}\n          />\n        )}\n        {panel.choices && (\n          <NodeFork>\n            {panel.choices.map((choice, index) => (\n              <PanelNode\n                key={choice.id}\n                id={choice.id}\n                position={{\n                  x: position.x - xBranchOffset + (2 * xBranchOffset * index) ,\n                  y: position.y + 40,\n                }}\n                depth={depth + 1}\n              />\n            ))}\n          </NodeFork>\n        )}\n      </NodeRow>\n    )\n  };\n\n  return (\n    <Wrapper ref={wrapperRef}>\n      <PanelNode\n        id={0}\n        depth={2}\n        position={({ x: 0, y: 10 })}\n      />\n    </Wrapper>\n  )\n};\n\nconst PanelPreview: React.FC<{\n  panel: Panel,\n}> = ({ panel }) => (\n  <Preview>\n    <TextPreview>{panel.text}</TextPreview>\n  </Preview>\n);\n\nexport default FlowChart;\n","import styled from 'styled-components/macro';\n\nimport Colors from './Colors';\nimport { Row, Column } from './UI';\n\nexport const Wrapper = styled(Row)`\n  background: ${Colors.primary};\n  color: ${Colors.secondary};\n  flex: 1;\n\n  @media (orientation:portrait) {\n    flex-direction: column;\n  }\n`;\n\nexport const TextInput = styled.textarea`\n  all: unset;\n  background: ${Colors.primaryVariant};\n  padding: 10px;\n  border-radius: 10px;\n  margin: 5px;\n  height: 55px;\n\n  ::placeholder {\n    color: ${Colors.secondaryVariant}\n  }\n`;\n\nexport const DrawColumn = styled(Column)`\n  flex: 2;\n`;\n","import styled from 'styled-components/macro';\n\nimport Colors from './Colors';\n\nexport const Wrapper = styled.canvas`\n  margin: 5px;\n  /* overflow: hidden; */\n  cursor: crosshair;\n  background: ${Colors.secondaryVariant};\n  border-radius: 10px;\n  flex: 1;\n  object-fit: contain;\n`\n","import React, { useState, useEffect } from 'react';\n\nimport Colors from './Colors';\nimport {\n  Wrapper,\n} from './Canvas.style';\n\nconst viewBoxSize = {\n  width: 400,\n  height: 300,\n};\n\nconst Canvas: React.FC<{\n  onChange?: (dataURL: string) => void,\n  dataURL: string,\n}> = ({\n  onChange,\n  dataURL,\n}) => {\n  const [context, setContext] = useState<CanvasRenderingContext2D>();\n  const [canvas, setCanvas] = useState<HTMLCanvasElement>();\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [prevPosition, setPrevPosition] = useState<Point>();\n\n  useEffect(() => {\n    function clearCanvas() {\n      if (!context || !canvas) return;\n\n      context.fillStyle = Colors.secondary;\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    if (dataURL && context) {\n      const image = new Image();\n      image.onload = () => {\n        clearCanvas();\n        context.drawImage(image, 0, 0);\n      };\n      image.src = dataURL;\n    } else {\n      clearCanvas();\n    }\n  }, [context, canvas, dataURL]);\n\n  function relativePoint(event: React.MouseEvent | React.Touch) : Point {\n    const {\n      width,\n      height,\n      left,\n      top,\n    } = canvas!.getBoundingClientRect();\n\n    const viewBoxRatio = viewBoxSize.height / viewBoxSize.width;\n    const boundsRatio = height / width;\n\n    const scale = viewBoxRatio < boundsRatio\n      ? width / viewBoxSize.width\n      : height / viewBoxSize.height\n\n    const offset = {\n      x: 0,\n      y: 0,\n    };\n\n    if (viewBoxRatio > boundsRatio) {\n      offset.x += (width - (viewBoxSize.width * scale)) / 2;\n    } else {\n      offset.y += (height - (viewBoxSize.height * scale)) / 2;\n    }\n\n    return {\n      x: (event.clientX - offset.x) / scale - left,\n      y: (event.clientY - offset.y) / scale - top,\n    };\n  }\n\n  function setCanvasRef(instance: HTMLCanvasElement | null) {\n    if (!instance) return;\n\n    setCanvas(instance);\n    setContext(instance.getContext('2d') || undefined);\n  }\n\n  function handleMouseMove(mouseEvent: React.MouseEvent) {\n    if (!isDrawing || !canvas || !context) return;\n\n    const position: Point = relativePoint(mouseEvent);\n\n    context.moveTo((prevPosition || position).x, (prevPosition || position).y);\n    context.lineTo(position.x, position.y);\n    context.strokeStyle = Colors.primaryVariant;\n    context.lineWidth = 1;\n    context.filter = 'url(#remove-alpha)';\n    context.stroke();\n\n    setPrevPosition(position);\n  }\n  function handleMouseDown() {\n    setIsDrawing(true);\n\n    if (context) {\n      context.beginPath();\n    }\n  }\n  function handleMouseUp() {\n    setIsDrawing(false);\n    setPrevPosition(undefined);\n\n    if (canvas && context && isDrawing) {\n      if (onChange) {\n        onChange(canvas.toDataURL());\n      }\n      context.closePath();\n    }\n  }\n  function handleMouseOut() {\n    handleMouseUp();\n  }\n  function handleMouseEnter() {\n\n  }\n\n  return (\n    <Wrapper\n      ref={setCanvasRef}\n      onMouseMove={handleMouseMove}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onMouseOut={handleMouseOut}\n      onMouseEnter={handleMouseEnter}\n      width={viewBoxSize.width}\n      height={viewBoxSize.height}\n    />\n  );\n};\n\nexport default Canvas;\n","import React, { useState, useEffect } from 'react';\n\nimport database from './database';\nimport {\n  Row,\n  Column,\n  Button,\n} from './UI';\nimport FlowChart from './FlowChart';\nimport {\n  Wrapper,\n  TextInput,\n  DrawColumn,\n} from './Home.style';\nimport Canvas from './Canvas';\n\nconst Home: React.FC = () => {\n  const [selected, setSelected] = useState<number>(0);\n  const [panels, setPanels] = useState<Panel[]>([{\n    drawing: '',\n    text: '',\n  }]);\n\n  function handlePublishClick() {\n    database.ref('stories').push(\n      {\n        panels: panels.map(panel => ({\n          ...(panel.choices ? {choices: JSON.stringify(panel.choices)} : {}),\n          ...(panel.nextId ? {nextId: panel.nextId} : {}),\n          drawing: JSON.stringify(panel.drawing),\n          text: panel.text,\n        })),\n      }\n    ).then(() => console.log('done publishing'));\n  }\n\n  function handleTextChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n    const newPanels = panels.slice(0);\n    newPanels[selected] = {\n      ...newPanels[selected],\n      text: event.target.value,\n    };\n\n    setPanels(newPanels);\n  }\n\n  function handleLoadClick() {\n    database.ref('stories').limitToLast(1).once('value').then(snapshot => {\n      const val = snapshot.val();\n      if (!val) return;\n\n      const panels = Object.values<{ panels: {\n        drawing: string,\n        choices: string,\n        text: string,\n        nextId: number,\n      }[] }>(val)[0].panels;\n\n      setPanels(panels.map(panel => ({\n        drawing: JSON.parse(panel.drawing),\n        choices: panel.choices ? JSON.parse(panel.choices): undefined,\n        text: panel.text,\n        nextId: panel.nextId,\n      })));\n    })\n  }\n\n  function handleNodeClick(panel: Panel, index: number) {\n    setSelected(index);\n  }\n\n  function handleNewPanelClick() {\n    if (panels[selected].nextId || panels[selected].choices) return;\n\n    setPanels(prevPanels => {\n      const newPanels = prevPanels.slice(0);\n      newPanels[selected].nextId = panels.length;\n      newPanels.push({\n        drawing: '',\n        text: '',\n      });\n\n      return newPanels;\n    });\n  }\n\n  function handleNewChoiceClick() {\n    if (panels[selected].nextId || panels[selected].choices) return;\n\n    setPanels(prevPanels => {\n      const newPanels = prevPanels.slice(0);\n      newPanels[selected].choices = [\n        {id: newPanels.length},\n        {id: newPanels.length + 1},\n      ];\n      newPanels.push({\n        drawing: '',\n        text: '',\n      });\n      newPanels.push({\n        drawing: '',\n        text: '',\n      });\n\n      return newPanels;\n    });\n  }\n\n  function handleCanvasChange(dataURL: string) {\n    setPanels(prevPanels => {\n      const newPanels = prevPanels.slice(0);\n      newPanels[selected] = {\n        ...newPanels[selected],\n        drawing: dataURL,\n      };\n      return newPanels;\n    });\n  }\n\n  useEffect(() => {\n    setSelected(panels.length - 1);\n  }, [panels.length]);\n\n  return (\n    <Wrapper>\n      <DrawColumn>\n        <Canvas\n          onChange={handleCanvasChange}\n          dataURL={panels[selected].drawing}\n        />\n        <TextInput\n          onChange={handleTextChange}\n          value={panels[selected].text}\n          placeholder=\"Insert panel text here\"\n        />\n        <Row>\n          <Button onClick={handleLoadClick}>[Load From Database]</Button>\n          <Button onClick={handlePublishClick}>Publish</Button>\n        </Row>\n      </DrawColumn>\n      <Column>\n        <Row>\n          <Button onClick={handleNewChoiceClick}>+ Choice</Button>\n          <Button onClick={handleNewPanelClick}>+ Panel</Button>\n        </Row>\n        <FlowChart\n          panels={panels}\n          onNodeClick={handleNodeClick}\n          selected={selected}\n        />\n      </Column>\n    </Wrapper>\n  )\n}\n\nexport default Home;\n","import { createGlobalStyle } from 'styled-components'\n\nimport Colors from './Colors';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background: ${Colors.primary};\n  }\n\n  #root {\n    display: flex;\n    height: 100vh;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Home from './Home';\nimport { GlobalStyle } from './index.style';\n\nReactDOM.render(\n  <>\n    <GlobalStyle/>\n    <Home />\n  </>\n, document.getElementById('root'));\n"],"sourceRoot":""}