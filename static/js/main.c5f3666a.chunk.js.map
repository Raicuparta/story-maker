{"version":3,"sources":["database.ts","styles/colors.ts","styles/UI.style.ts","styles/Home.style.ts","styles/Canvas.style.ts","components/Canvas.tsx","components/Home.tsx","styles/Global.style.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","colors","primary","primaryVariant","darken","secondary","lighten","secondaryVariant","Button","styled","button","withConfig","displayName","componentId","Colors","Row","div","Column","Wrapper","TextInput","textarea","DrawColumn","Thumbnail","img","canvas","viewBoxSize","width","height","Canvas","_ref","onChange","dataURL","_useState","useState","_useState2","Object","slicedToArray","context","setContext","_useState3","_useState4","setCanvas","_useState5","_useState6","isDrawing","setIsDrawing","_useState7","_useState8","prevPosition","setPrevPosition","handleMouseUp","undefined","toDataURL","closePath","useEffect","clearCanvas","fillStyle","fillRect","image","Image","onload","drawImage","src","react_default","a","createElement","Canvas_style_Wrapper","ref","instance","getContext","onMouseMove","mouseEvent","position","event","_getBoundingClientRec","getBoundingClientRect","left","top","viewBoxRatio","boundsRatio","scale","offset","x","y","clientX","clientY","relativePoint","moveTo","lineTo","strokeStyle","lineWidth","filter","stroke","onMouseDown","beginPath","onMouseUp","onMouseOut","onMouseEnter","Home","selected","setSelected","drawing","text","nextIds","id","panels","setPanels","length","currentPanel","prevPanel","prevId","nextPanels","map","addPanels","count","prevPanels","newPanels","slice","i","push","handleThumbnailClick","panel","components_Canvas","objectSpread","target","value","placeholder","onClick","limitToLast","once","then","snapshot","val","values","JSON","parse","data","stringify","console","log","key","GlobalStyle","createGlobalStyle","_templateObject","App","hot","Fragment","components_Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5f3666a.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyC5mVxaorL_LmNWasC5LNmAC3cmlQ-5vFM',\n  authDomain: 'story-maker-85706.firebaseapp.com',\n  databaseURL: 'https://story-maker-85706.firebaseio.com',\n  projectId: 'story-maker-85706',\n  storageBucket: 'story-maker-85706.appspot.com',\n  messagingSenderId: '105986550181',\n  appId: '1:105986550181:web:81ec40d053faad45'\n});\n\nexport default firebase.database();","import { darken, lighten } from 'polished';\n\nconst primary = '#4c7d55';\nconst primaryVariant = darken(0.15, primary);\nconst secondary = lighten(0.5, primary);\nconst secondaryVariant = lighten(0.15, primary);\n\nexport default {\n  primary,\n  primaryVariant,\n  secondary,\n  secondaryVariant,\n}\n","import styled from 'styled-components/macro';\n\nimport Colors from './colors';\n\nexport const Button = styled.button`\n  all: unset;\n  flex: 1;\n  padding: 7px;\n  background: ${Colors.secondaryVariant};\n  border-radius: 5px;\n  margin: 5px;\n  text-align: center;\n  cursor: pointer;\n  border: solid 3px ${Colors.secondaryVariant};\n  \n  :hover {\n    border-color: ${Colors.primaryVariant};\n  }\n  \n  :active {\n    background: ${Colors.primary};\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n`;\n\nexport const Column = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from 'styled-components/macro';\n\nimport Colors from './colors';\nimport { Row, Column } from './UI.style';\n\nexport const Wrapper = styled(Row)`\n  background: ${Colors.primary};\n  color: ${Colors.secondary};\n  flex: 1;\n\n  @media (orientation:portrait) {\n    flex-direction: column;\n  }\n`;\n\nexport const TextInput = styled.textarea`\n  all: unset;\n  background: ${Colors.primaryVariant};\n  padding: 10px;\n  border-radius: 10px;\n  margin: 5px;\n  height: 55px;\n\n  ::placeholder {\n    color: ${Colors.secondaryVariant}\n  }\n`;\n\nexport const DrawColumn = styled(Column)`\n  flex: 2;\n`;\n\nexport const Thumbnail = styled.img`\n  width: calc(100% - 20px);\n  flex: 1;\n  margin: 5px;\n  border: 5px solid ${Colors.secondaryVariant};\n  border-radius: 10px;\n  cursor: pointer;\n  \n    \n  :hover {\n    border-color: ${Colors.primaryVariant};\n  }\n`\n","import styled from 'styled-components/macro';\n\nimport Colors from './colors';\n\nexport const Wrapper = styled.canvas`\n  margin: 5px;\n  /* overflow: hidden; */\n  cursor: crosshair;\n  background: ${Colors.secondaryVariant};\n  border-radius: 10px;\n  flex: 1;\n  object-fit: contain;\n`\n","import React, { useState, useEffect } from 'react';\n\nimport Colors from '../styles/colors';\nimport {\n  Wrapper,\n} from '../styles/Canvas.style';\n\nconst viewBoxSize = {\n  width: 400,\n  height: 300,\n};\n\nconst Canvas: React.FC<{\n  onChange?: (dataURL: string) => void,\n  dataURL: string,\n}> = ({\n  onChange,\n  dataURL,\n}) => {\n  const [context, setContext] = useState<CanvasRenderingContext2D>();\n  const [canvas, setCanvas] = useState<HTMLCanvasElement>();\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [prevPosition, setPrevPosition] = useState<Point>();\n\n  useEffect(() => {\n    function clearCanvas() {\n      if (!context || !canvas) return;\n\n      context.fillStyle = Colors.secondary;\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    if (dataURL && context) {\n      const image = new Image();\n      image.onload = () => {\n        clearCanvas();\n        context.drawImage(image, 0, 0);\n      };\n      image.src = dataURL;\n    } else {\n      clearCanvas();\n    }\n  }, [context, canvas, dataURL]);\n\n  function relativePoint(event: React.MouseEvent | React.Touch) : Point {\n    const {\n      width,\n      height,\n      left,\n      top,\n    } = canvas!.getBoundingClientRect();\n\n    const viewBoxRatio = viewBoxSize.height / viewBoxSize.width;\n    const boundsRatio = height / width;\n\n    const scale = viewBoxRatio < boundsRatio\n      ? width / viewBoxSize.width\n      : height / viewBoxSize.height\n\n    const offset = {\n      x: 0,\n      y: 0,\n    };\n\n    if (viewBoxRatio > boundsRatio) {\n      offset.x += (width - (viewBoxSize.width * scale)) / 2;\n    } else {\n      offset.y += (height - (viewBoxSize.height * scale)) / 2;\n    }\n\n    return {\n      x: (event.clientX - offset.x) / scale - left,\n      y: (event.clientY - offset.y) / scale - top,\n    };\n  }\n\n  function setCanvasRef(instance: HTMLCanvasElement | null) {\n    if (!instance) return;\n\n    setCanvas(instance);\n    setContext(instance.getContext('2d') || undefined);\n  }\n\n  function handleMouseMove(mouseEvent: React.MouseEvent) {\n    if (!isDrawing || !canvas || !context) return;\n\n    const position: Point = relativePoint(mouseEvent);\n\n    context.moveTo((prevPosition || position).x, (prevPosition || position).y);\n    context.lineTo(position.x, position.y);\n    context.strokeStyle = Colors.primaryVariant;\n    context.lineWidth = 1;\n    context.filter = 'url(#remove-alpha)';\n    context.stroke();\n\n    setPrevPosition(position);\n  }\n  function handleMouseDown() {\n    setIsDrawing(true);\n\n    if (context) {\n      context.beginPath();\n    }\n  }\n  function handleMouseUp() {\n    setIsDrawing(false);\n    setPrevPosition(undefined);\n\n    if (canvas && context && isDrawing) {\n      if (onChange) {\n        onChange(canvas.toDataURL());\n      }\n      context.closePath();\n    }\n  }\n  function handleMouseOut() {\n    handleMouseUp();\n  }\n  function handleMouseEnter() {\n\n  }\n\n  return (\n    <Wrapper\n      ref={setCanvasRef}\n      onMouseMove={handleMouseMove}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onMouseOut={handleMouseOut}\n      onMouseEnter={handleMouseEnter}\n      width={viewBoxSize.width}\n      height={viewBoxSize.height}\n    />\n  );\n};\n\nexport default Canvas;\n","import React, { useState, useEffect } from 'react';\n\nimport database from '../database';\nimport {\n  Row,\n  Column,\n  Button,\n} from '../styles/UI.style';\nimport {\n  Wrapper,\n  TextInput,\n  DrawColumn,\n  Thumbnail,\n} from '../styles/Home.style';\nimport Canvas from './Canvas';\n\nconst Home: React.FC = () => {\n  const [selected, setSelected] = useState<number>(0);\n  const [panels, setPanels] = useState<Panel[]>([{\n    drawing: '',\n    text: '',\n    nextIds: [],\n    id: 0,\n  }]);\n\n  useEffect(() => {\n    setSelected(panels.length - 1);\n  }, [panels.length]);\n\n  const currentPanel = panels[selected];\n  const prevPanel = currentPanel.prevId !== undefined && panels[currentPanel.prevId];\n  const nextPanels = currentPanel.nextIds.map(id => panels[id]);\n\n  function handlePublishClick() {\n    const data: SerializedData = {\n      panels: panels.map(panel => ({\n        nextIds: JSON.stringify(panel.nextIds),\n        drawing: panel.drawing,\n        text: panel.text,\n        id: panel.id,\n        ...(panel.prevId !== undefined ? { prevId: panel.prevId } : {}),\n      })),\n    };\n\n    database\n      .ref('stories')\n      .push(data)\n      .then(() => console.log('done publishing'));\n  }\n\n  function handleTextChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n    const newPanels = panels.slice(0);\n    newPanels[selected] = {\n      ...newPanels[selected],\n      text: event.target.value,\n    };\n\n    setPanels(newPanels);\n  }\n\n  function handleLoadClick() {\n    database.ref('stories').limitToLast(1).once('value').then(snapshot => {\n      const val = snapshot.val();\n      if (!val) return;\n\n      const panels = Object.values<SerializedData>(val)[0].panels;\n\n      setPanels(panels.map(panel => ({\n        drawing: panel.drawing,\n        nextIds: JSON.parse(panel.nextIds),\n        text: panel.text,\n        prevId: panel.prevId,\n        id: panel.id,\n      })));\n    })\n  }\n\n  function addPanels (prevId: number, count: number) {\n    if (currentPanel.nextIds.length > 0) return;  \n    setPanels(prevPanels => {\n      const newPanels = prevPanels.slice(0);\n\n      for (let i = 0; i < count; i++) {\n        newPanels[selected].nextIds.push(newPanels.length);\n        newPanels.push({\n          drawing: '',\n          text: '',\n          prevId,\n          nextIds: [],\n          id: newPanels.length,\n        });\n      }\n\n      return newPanels;\n    })\n  };\n\n  function handleNewPanelClick() {\n    addPanels(selected, 1);\n  }\n\n  function handleNewChoiceClick() {\n    addPanels(selected, 2);\n  }\n\n  function handleCanvasChange(dataURL: string) {\n    setPanels(prevPanels => {\n      const newPanels = prevPanels.slice(0);\n      newPanels[selected] = {\n        ...newPanels[selected],\n        drawing: dataURL,\n      };\n      return newPanels;\n    });\n  }\n\n  function handleThumbnailClick(panel: Panel) {\n    setSelected(panel.id);\n  }\n\n  return (\n    <Wrapper>\n      <DrawColumn>\n        <Canvas\n          onChange={handleCanvasChange}\n          dataURL={currentPanel.drawing}\n        />\n        <TextInput\n          onChange={handleTextChange}\n          value={currentPanel.text}\n          placeholder=\"Insert panel text here\"\n        />\n        <Row>\n          <Button onClick={handleLoadClick}>[Load From Database]</Button>\n          <Button onClick={handlePublishClick}>Publish</Button>\n        </Row>\n      </DrawColumn>\n      <Column>\n        <Row>\n          <Button onClick={handleNewChoiceClick}>+ Choice</Button>\n          <Button onClick={handleNewPanelClick}>+ Panel</Button>\n        </Row>\n        <Row>\n          <Column>\n            {prevPanel && (\n              <Thumbnail\n                src={prevPanel.drawing}\n                onClick={() => handleThumbnailClick(prevPanel)}\n              />\n            )}\n          </Column>\n          <Column>\n            {nextPanels.map(panel => (\n              <Thumbnail\n                key={panel.id}\n                src={panel.drawing}\n                onClick={() => handleThumbnailClick(panel)}\n              />\n            ))}\n          </Column>\n        </Row>\n      </Column>\n    </Wrapper>\n  )\n}\n\nexport default Home;\n","import { createGlobalStyle } from 'styled-components'\n\nimport Colors from './colors';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background: ${Colors.primary};\n  }\n\n  #root {\n    display: flex;\n    height: 100vh;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { hot } from 'react-hot-loader/root';\n\nimport Home from './components/Home';\nimport { GlobalStyle } from './styles/Global.style';\n\nconst App: React.FC = hot(() => (\n  <>\n    <GlobalStyle/>\n    <Home />\n  </>\n));\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}