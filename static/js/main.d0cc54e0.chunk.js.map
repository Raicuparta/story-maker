{"version":3,"sources":["database.ts","styles/colors.ts","styles/UI.style.ts","styles/Home.style.ts","styles/Drawing.style.ts","components/Drawing.tsx","styles/Thumbnail.style.ts","components/Thumbnail.tsx","components/Home.tsx","styles/Global.style.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","colors","primary","primaryVariant","darken","secondary","lighten","secondaryVariant","Button","styled","button","withConfig","displayName","componentId","Colors","Row","div","Column","Wrapper","TextInput","textarea","DrawColumn","Canvas","canvas","viewBoxSize","width","height","Drawing","_ref","onChange","dataURL","_useState","useState","_useState2","Object","slicedToArray","context","setContext","_useState3","_useState4","setCanvas","_useState5","_useState6","isDrawing","setIsDrawing","_useState7","_useState8","prevPosition","setPrevPosition","handleMouseUp","undefined","toDataURL","useEffect","clearCanvas","fillStyle","fillRect","image","Image","onload","drawImage","src","react_default","a","createElement","ref","instance","getContext","onMouseMove","mouseEvent","position","event","_getBoundingClientRec","getBoundingClientRect","left","top","viewBoxRatio","boundsRatio","scale","offset","x","y","clientX","clientY","relativePoint","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","closePath","onMouseDown","onMouseUp","onMouseOut","onMouseEnter","common","css","_templateObject","ThumbnailImage","img","Placeholder","Thumbnail","Home","selected","setSelected","drawing","text","nextIds","id","panels","setPanels","currentPanel","prevPanel","prevId","nextPanels","map","handleThumbnailClick","panel","components_Drawing","prevPanels","newPanels","slice","objectSpread","target","value","placeholder","onClick","limitToLast","once","then","snapshot","val","values","JSON","parse","data","stringify","push","console","log","components_Thumbnail","key","length","GlobalStyle","createGlobalStyle","Global_style_templateObject","App","hot","Fragment","components_Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0cc54e0.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyC5mVxaorL_LmNWasC5LNmAC3cmlQ-5vFM',\n  authDomain: 'story-maker-85706.firebaseapp.com',\n  databaseURL: 'https://story-maker-85706.firebaseio.com',\n  projectId: 'story-maker-85706',\n  storageBucket: 'story-maker-85706.appspot.com',\n  messagingSenderId: '105986550181',\n  appId: '1:105986550181:web:81ec40d053faad45'\n});\n\nexport default firebase.database();","import { darken, lighten } from 'polished';\n\nconst primary = '#4c7d55';\nconst primaryVariant = darken(0.15, primary);\nconst secondary = lighten(0.5, primary);\nconst secondaryVariant = lighten(0.15, primary);\n\nexport default {\n  primary,\n  primaryVariant,\n  secondary,\n  secondaryVariant,\n}\n","import styled from 'styled-components/macro';\n\nimport Colors from './colors';\n\nexport const Button = styled.button`\n  all: unset;\n  flex: 1;\n  padding: 7px;\n  background: ${Colors.secondaryVariant};\n  border-radius: 5px;\n  margin: 5px;\n  text-align: center;\n  cursor: pointer;\n  border: solid 3px ${Colors.secondaryVariant};\n  \n  :hover {\n    border-color: ${Colors.primaryVariant};\n  }\n  \n  :active {\n    background: ${Colors.primary};\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n`;\n\nexport const Column = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from 'styled-components/macro';\n\nimport Colors from './colors';\nimport { Row, Column } from './UI.style';\n\nexport const Wrapper = styled(Row)`\n  background: ${Colors.primary};\n  color: ${Colors.secondary};\n  flex: 1;\n\n  @media (orientation:portrait) {\n    flex-direction: column;\n  }\n`;\n\nexport const TextInput = styled.textarea`\n  all: unset;\n  background: ${Colors.primaryVariant};\n  padding: 10px;\n  border-radius: 10px;\n  margin: 5px;\n  height: 55px;\n\n  ::placeholder {\n    color: ${Colors.secondaryVariant}\n  }\n`;\n\nexport const DrawColumn = styled(Column)`\n  flex: 2;\n`;\n","import styled from 'styled-components/macro';\n\nimport Colors from './colors';\n\nexport const Canvas = styled.canvas`\n  margin: 5px;\n  cursor: crosshair;\n  background: ${Colors.secondaryVariant};\n  border-radius: 10px;\n  flex: 1;\n  object-fit: contain;\n`\n","import React, { useState, useEffect } from 'react';\n\nimport Colors from '../styles/colors';\nimport {\n  Canvas,\n} from '../styles/Drawing.style';\n\nconst viewBoxSize = {\n  width: 400,\n  height: 300,\n};\n\nconst Drawing: React.FC<{\n  onChange?: (dataURL: string) => void,\n  dataURL: string,\n}> = ({\n  onChange,\n  dataURL,\n}) => {\n  const [context, setContext] = useState<CanvasRenderingContext2D>();\n  const [canvas, setCanvas] = useState<HTMLCanvasElement>();\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [prevPosition, setPrevPosition] = useState<Point>();\n\n  useEffect(() => {\n    function clearCanvas() {\n      if (!context || !canvas) return;\n\n      context.fillStyle = Colors.secondary;\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    if (dataURL && context) {\n      const image = new Image();\n      image.onload = () => {\n        clearCanvas();\n        context.drawImage(image, 0, 0);\n      };\n      image.src = dataURL;\n    } else {\n      clearCanvas();\n    }\n  }, [context, canvas, dataURL]);\n\n  function relativePoint(event: React.MouseEvent | React.Touch) : Point {\n    const {\n      width,\n      height,\n      left,\n      top,\n    } = canvas!.getBoundingClientRect();\n\n    const viewBoxRatio = viewBoxSize.height / viewBoxSize.width;\n    const boundsRatio = height / width;\n\n    const scale = viewBoxRatio < boundsRatio\n      ? width / viewBoxSize.width\n      : height / viewBoxSize.height\n\n    const offset = {\n      x: 0,\n      y: 0,\n    };\n\n    if (viewBoxRatio > boundsRatio) {\n      offset.x += (width - (viewBoxSize.width * scale)) / 2;\n    } else {\n      offset.y += (height - (viewBoxSize.height * scale)) / 2;\n    }\n\n    return {\n      x: (event.clientX - offset.x) / scale - left,\n      y: (event.clientY - offset.y) / scale - top,\n    };\n  }\n\n  function setCanvasRef(instance: HTMLCanvasElement | null) {\n    if (!instance || canvas || context) return;\n\n    setCanvas(instance);\n    setContext(instance.getContext('2d') || undefined);\n  }\n\n  function handleMouseMove(mouseEvent: React.MouseEvent) {\n    if (!isDrawing || !canvas || !context) return;\n\n    const position: Point = relativePoint(mouseEvent);\n\n    // context.beginPath();\n    // context.moveTo(0, 0);\n    // context.lineTo(0, 0);\n    // context.strokeStyle = Colors.primaryVariant;\n    // context.lineWidth = 1;\n    // context.stroke();\n    // context.closePath();\n\n    context.beginPath();\n    context.moveTo((prevPosition || position).x, (prevPosition || position).y);\n    context.lineTo(position.x, position.y);\n    context.strokeStyle = Colors.primaryVariant;\n    context.lineWidth = 1;\n    context.stroke();\n    context.closePath();\n\n    setPrevPosition(position);\n  }\n  function handleMouseDown() {\n    setIsDrawing(true);\n\n    if (context) {\n      context.beginPath();\n    }\n  }\n  function handleMouseUp() {\n    setIsDrawing(false);\n    setPrevPosition(undefined);\n\n    if (canvas && context && isDrawing) {\n      if (onChange) {\n        onChange(canvas.toDataURL());\n      }\n      // context.stroke();\n      // context.closePath();\n    }\n  }\n  function handleMouseOut() {\n    handleMouseUp();\n  }\n  function handleMouseEnter() {\n\n  }\n\n  return (\n    <Canvas\n      ref={setCanvasRef}\n      onMouseMove={handleMouseMove}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onMouseOut={handleMouseOut}\n      onMouseEnter={handleMouseEnter}\n      width={viewBoxSize.width}\n      height={viewBoxSize.height}\n    />\n  );\n};\n\nexport default Drawing;\n","import styled, { css } from 'styled-components/macro';\n\nimport Colors from './colors';\n\nconst common = css`\n  width: 100%;\n  border-radius: 5px;\n  margin-top: 5px;\n`\n\nexport const ThumbnailImage = styled.img`\n  ${common}\n  flex: 1;\n`\n\nexport const Placeholder = styled.div`\n  ${common}\n  padding-bottom: 75%;\n  background-color: ${Colors.secondary};\n`\n","import React from 'react';\n\nimport {\n  ThumbnailImage,\n  Placeholder,\n} from '../styles/Thumbnail.style'\n\nconst Thumbnail: React.FC<{ src: string }> = ({ src }) => (\n  src ? (\n    <ThumbnailImage src={src} />\n  ) : (\n    <Placeholder />\n  )\n);\n\nexport default Thumbnail\n","import React, { useState } from 'react';\n\nimport database from '../database';\nimport {\n  Row,\n  Column,\n  Button,\n} from '../styles/UI.style';\nimport {\n  Wrapper,\n  TextInput,\n  DrawColumn,\n} from '../styles/Home.style';\nimport Drawing from './Drawing';\nimport Thumbnail from './Thumbnail';\n\nconst Home: React.FC = () => {\n  const [selected, setSelected] = useState<number>(0);\n  const [panels, setPanels] = useState<Panel[]>([{\n    drawing: '',\n    text: '',\n    nextIds: [],\n    id: 0,\n  }]);\n\n  const currentPanel = panels[selected];\n  const prevPanel = currentPanel.prevId !== undefined && panels[currentPanel.prevId];\n  const nextPanels = currentPanel.nextIds.map(id => panels[id]);\n\n  function handlePublishClick() {\n    const data: SerializedData = {\n      panels: panels.map(panel => ({\n        nextIds: JSON.stringify(panel.nextIds),\n        drawing: panel.drawing,\n        text: panel.text,\n        id: panel.id,\n        ...(panel.prevId !== undefined ? { prevId: panel.prevId } : {}),\n      })),\n    };\n\n    database\n      .ref('stories')\n      .push(data)\n      .then(() => console.log('done publishing'));\n  }\n\n  function handleTextChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n    const newPanels = panels.slice(0);\n    newPanels[selected] = {\n      ...newPanels[selected],\n      text: event.target.value,\n    };\n\n    setPanels(newPanels);\n  }\n\n  function handleLoadClick() {\n    database.ref('stories').limitToLast(1).once('value').then(snapshot => {\n      const val = snapshot.val();\n      if (!val) return;\n\n      const panels = Object.values<SerializedData>(val)[0].panels;\n\n      setPanels(panels.map(panel => ({\n        drawing: panel.drawing,\n        nextIds: JSON.parse(panel.nextIds),\n        text: panel.text,\n        prevId: panel.prevId,\n        id: panel.id,\n      })));\n    })\n  }\n\n  function handleNewPanelClick() {\n    setPanels(prevPanels => {\n      const newPanels = prevPanels.slice(0);\n\n      newPanels[selected].nextIds.push(newPanels.length);\n      newPanels.push({\n        drawing: '',\n        text: '',\n        prevId: selected,\n        nextIds: [],\n        id: newPanels.length,\n      });\n\n      return newPanels;\n    })\n  };\n\n  function handleCanvasChange(dataURL: string) {\n    setPanels(prevPanels => {\n      const newPanels = prevPanels.slice(0);\n      newPanels[selected] = {\n        ...newPanels[selected],\n        drawing: dataURL,\n      };\n      return newPanels;\n    });\n  }\n\n  function handleThumbnailClick(panel: Panel) {\n    setSelected(panel.id);\n  }\n\n  return (\n    <Wrapper>\n      <DrawColumn>\n        <Drawing\n          onChange={handleCanvasChange}\n          dataURL={currentPanel.drawing}\n        />\n        <TextInput\n          onChange={handleTextChange}\n          value={currentPanel.text}\n          placeholder=\"Insert panel text here\"\n        />\n        <Row>\n          <Button onClick={handleLoadClick}>[Load From Database]</Button>\n          <Button onClick={handlePublishClick}>Publish</Button>\n        </Row>\n      </DrawColumn>\n      <Column>\n        <Row>\n          <Column>\n            {prevPanel && (\n              <Button onClick={() => handleThumbnailClick(prevPanel)}>\n                Previous Panel\n                <Thumbnail src={prevPanel.drawing} />\n              </Button>\n            )}\n          </Column>\n          <Column>\n            {nextPanels.map(panel => (\n              <Button\n                key={panel.id}\n                onClick={() => handleThumbnailClick(panel)}\n              >\n                Next Panel\n                <Thumbnail src={panel.drawing} />\n              </Button>\n            ))}\n            {nextPanels.length < 2 && (\n              <Button onClick={handleNewPanelClick}>\n                Add Panel\n              </Button>\n            )}\n          </Column>\n        </Row>\n      </Column>\n    </Wrapper>\n  )\n}\n\nexport default Home;\n","import { createGlobalStyle } from 'styled-components'\n\nimport Colors from './colors';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background: ${Colors.primary};\n  }\n\n  #root {\n    display: flex;\n    height: 100vh;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { hot } from 'react-hot-loader/root';\n\nimport Home from './components/Home';\nimport { GlobalStyle } from './styles/Global.style';\n\nconst App: React.FC = hot(() => (\n  <>\n    <GlobalStyle/>\n    <Home />\n  </>\n));\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}