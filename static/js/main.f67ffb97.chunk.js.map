{"version":3,"sources":["database.ts","styles/colors.ts","styles/UI.style.ts","styles/Home.style.ts","bresenham.ts","styles/Drawing.style.ts","components/Drawing.tsx","styles/PanelConnections.style.ts","styles/Thumbnail.style.ts","components/Thumbnail.tsx","components/PanelConnections.tsx","components/Home.tsx","styles/Global.style.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","colors","primary","primaryVariant","darken","secondary","lighten","secondaryVariant","ButtonBase","styled","button","withConfig","displayName","componentId","Colors","Button","RoundButton","Base","div","Row","Column","Wrapper","TextInput","textarea","bresenham","pointA","pointB","points","deltaX","x","deltaY","y","absDeltaY","Math","abs","absDeltaX","signX","signY","eps","push","DrawingImage","img","Canvas","canvas","viewBoxSize","width","height","Drawing","_ref","onChange","dataURL","_useState","useState","_useState2","Object","slicedToArray","context","setContext","_useState3","_useState4","setCanvas","_useState5","_useState6","isDrawing","setIsDrawing","_useState7","_useState8","prevPosition","setPrevPosition","draw","event","position","_getBoundingClientRec","getBoundingClientRect","left","top","viewBoxRatio","boundsRatio","scale","offset","floor","clientX","clientY","relativePoint","line","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","point","value","fillRect","err","return","toDataURL","startDrawing","stopDrawing","useEffect","fillStyle","image","Image","onload","drawImage","src","react_default","a","createElement","Drawing_style_Wrapper","ref","instance","getContext","onMouseMove","mouseEvent","onTouchMove","touchEvent","touches","onTouchStart","onMouseDown","onMouseUp","onTouchEnd","onMouseOut","PanelsWrapper","NewPannelText","common","css","_templateObject","ThumbnailImage","Placeholder","Thumbnail","PanelConnections","currentPanel","prevPanel","nextPanels","onConnectionClick","onNewPanelClick","PanelConnections_style_Wrapper","onClick","components_Thumbnail","map","panel","key","id","length","Home","selected","setSelected","text","nextIds","panels","setPanels","prevId","components_Drawing","prevPanels","newPanels","slice","objectSpread","target","placeholder","limitToLast","once","then","snapshot","val","values","JSON","parse","data","stringify","console","log","components_PanelConnections","GlobalStyle","createGlobalStyle","Global_style_templateObject","App","hot","Fragment","components_Home","ReactDOM","render","document","getElementById"],"mappings":"qNAGAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,wCAGMR,UAASS,yBCNTC,EAAA,CACbC,QANc,UAOdC,eANqBC,YAAO,IADd,WAQdC,UANgBC,YAAQ,GAFV,WASdC,iBANuBD,YAAQ,IAHjB,YCEVE,EAAaC,IAAOC,OAAVC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGJ,CAAH,gJAEAK,EAAOP,iBAIDO,EAAOP,iBAGTO,EAAOX,eAITW,EAAOZ,SAIZa,EAASN,YAAOD,GAAVG,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGJ,CAAH,2CAMNO,EAAcP,YAAOD,GAAVG,WAAA,CAAAC,YAAA,uBAAAC,YAAA,YAAGJ,CAAH,2EAQlBQ,EAAOR,IAAOS,IAAVP,WAAA,CAAAC,YAAA,gBAAAC,YAAA,YAAGJ,CAAH,0CAKGU,EAAMV,YAAOQ,GAAVN,WAAA,CAAAC,YAAA,eAAAC,YAAA,YAAGJ,CAAH,MAEHW,EAASX,YAAOQ,GAAVN,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGJ,CAAH,mCCrCNY,EAAUZ,YAAOU,GAAVR,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,0FACJK,EAAOZ,QACZY,EAAOT,WAQLiB,EAAYb,IAAOc,SAAVZ,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,6GAENK,EAAOX,eAOVW,EAAOP,kBCSLiB,MAjCf,SAAmBC,EAAeC,GAChC,IAAMC,EAAkB,GAClBC,EAASF,EAAOG,EAAIJ,EAAOI,EAC3BC,EAASJ,EAAOK,EAAIN,EAAOM,EAC3BC,EAAYC,KAAKC,IAAIN,GACrBO,EAAYF,KAAKC,IAAIJ,GACrBM,EAAQR,EAAS,EAAI,GAAK,EAC1BS,EAAQP,EAAS,EAAI,GAAK,EAE5BQ,EAAM,EAEV,GAAIN,EAAYG,EACd,IAAK,IAAIN,EAAIJ,EAAOI,EAAGE,EAAIN,EAAOM,EAAGK,EAAQ,EAAIP,GAAKH,EAAOG,EAAIA,GAAKH,EAAOG,EAAGA,GAAKO,EACnFT,EAAOY,KAAK,CAAEV,IAAGE,OACjBO,GAAOH,IACK,GAAMH,IAChBD,GAAKM,EACLC,GAAON,QAIX,IAAK,IAAIH,EAAIJ,EAAOI,EAAGE,EAAIN,EAAOM,EAAGM,EAAQ,EAAIN,GAAKL,EAAOK,EAAIA,GAAKL,EAAOK,EAAGA,GAAKM,EACnFV,EAAOY,KAAK,CAAEV,IAAGE,OACjBO,GAAON,IACK,GAAMG,IAChBN,GAAKO,EACLE,GAAOH,GAIb,OAAOR,GC1BIN,EAAUZ,IAAOS,IAAVP,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAGJ,CAAH,2GAEJK,EAAOP,kBAQViC,EAAe/B,IAAOgC,IAAV9B,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAGJ,CAAH,yGAUZiC,EAASjC,IAAOkC,OAAVhC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,yGCdbmC,EAAc,CAClBC,MAAO,GACPC,OAAQ,IA+IKC,EAzIV,SAAAC,GAGC,IAFJC,EAEID,EAFJC,SACAC,EACIF,EADJE,QACIC,EAC4BC,qBAD5BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACKK,EADLH,EAAA,GACcI,EADdJ,EAAA,GAAAK,EAE0BN,qBAF1BO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEKf,EAFLgB,EAAA,GAEaC,EAFbD,EAAA,GAAAE,EAGgCT,oBAAS,GAHzCU,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAGKE,EAHLD,EAAA,GAGgBE,EAHhBF,EAAA,GAAAG,EAIsCb,qBAJtCc,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAIKE,EAJLD,EAAA,GAImBE,EAJnBF,EAAA,GAqEF,SAASG,EAAKC,GACZ,GAAKd,GAAYb,EAAjB,CAEA,IAAM4B,EA1CR,SAAuBD,GAA8C,IAAAE,EAM/D7B,EAAQ8B,wBAJV5B,EAFiE2B,EAEjE3B,MACAC,EAHiE0B,EAGjE1B,OACA4B,EAJiEF,EAIjEE,KACAC,EALiEH,EAKjEG,IAGIC,EAAehC,EAAYE,OAASF,EAAYC,MAChDgC,EAAc/B,EAASD,EAEvBiC,EAAQF,EAAeC,EACzBhC,EAAQD,EAAYC,MACpBC,EAASF,EAAYE,OAEnBiC,EAAgB,CACpBlD,EAAG6C,EACH3C,EAAG4C,GASL,OANIC,EAAeC,EACjBE,EAAOlD,IAAMgB,EAASD,EAAYC,MAAQiC,GAAU,EAEpDC,EAAOhD,IAAMe,EAAUF,EAAYE,OAASgC,GAAU,EAGjD,CACLjD,EAAGI,KAAK+C,OAAOV,EAAMW,QAAUF,EAAOlD,GAAKiD,GAC3C/C,EAAGE,KAAK+C,OAAOV,EAAMY,QAAUH,EAAOhD,GAAK+C,IAcrBK,CAAcb,GAChCc,EAAO5D,EAAU2C,GAAgBI,EAAUA,GAJEc,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAMnD,QAAAC,EAAAC,EAAkBN,EAAlBO,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAwB,KAAfU,EAAeN,EAAAO,MACtBxC,EAAQyC,SAASF,EAAMlE,EAAGkE,EAAMhE,EAAG,EAAG,IAPW,MAAAmE,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,GAUnDtC,EAASN,EAAOyD,aAEhBhC,EAAgBG,IAuBlB,SAAS8B,IACPrC,GAAa,GAGf,SAASsC,IACPtC,GAAa,GACbI,OAAgBoB,GAGlB,OA3GAe,oBAAU,WACR,GAAK/C,GAAYb,IAIZO,IACHM,EAAQgD,UAAY1F,EAAOT,UAC3BmD,EAAQyC,SAAS,EAAG,EAAGtD,EAAOE,MAAOF,EAAOG,QAE5CG,EAASN,EAAOyD,cAElB5C,EAAQgD,UAAY1F,EAAOZ,SAItB6D,GAAW,CACd,IAAM0C,EAAQ,IAAIC,MAClBD,EAAME,OAAS,WACbnD,EAAQoD,UAAUH,EAAO,EAAG,IAE9BA,EAAMI,IAAM3D,IAEb,CAACM,EAASb,EAAQO,EAASa,EAAWd,IAsFvC6D,EAAAC,EAAAC,cAACC,EAAD,KACG/D,GACC4D,EAAAC,EAAAC,cAACxE,EAAD,CAAcqE,IAAK3D,IAErB4D,EAAAC,EAAAC,cAACtE,EAAD,CACEwE,IAzDN,SAAsBC,IACfA,GAAYxE,GAAUa,IAE3BI,EAAUuD,GACV1D,EAAW0D,EAASC,WAAW,YAAS5B,KAsDpC6B,YApCN,SAAyBC,GACnBvD,GACFM,EAAKiD,IAmCHC,YA/BN,SAAyBC,GACvBnD,EAAKmD,EAAWC,QAAQ,KA+BpBC,aAvBN,SAA0BF,GACxBnB,IACAhC,EAAKmD,EAAWC,QAAQ,KAsBpBE,YA7BN,SAAyBL,GACvBjB,IACAhC,EAAKiD,IA4BDM,UAAWtB,EACXuB,WAAYvB,EACZwB,WAAYxB,EACZzD,MAAOD,EAAYC,MACnBC,OAAQF,EAAYE,WCjJjBzB,EAAUZ,YAAOW,GAAVT,WAAA,CAAAC,YAAA,iCAAAC,YAAA,gBAAGJ,CAAH,kHAWPsH,EAAgBtH,YAAOU,GAAVR,WAAA,CAAAC,YAAA,uCAAAC,YAAA,gBAAGJ,CAAH,qGAQbuH,EAAgBvH,IAAOS,IAAVP,WAAA,CAAAC,YAAA,uCAAAC,YAAA,gBAAGJ,CAAH,oJCnB1B,IAAMwH,EAASC,YAAHC,KAKCC,EAAiB3H,IAAOgC,IAAV9B,WAAA,CAAAC,YAAA,iCAAAC,YAAA,eAAGJ,CAAH,gBACvBwH,GAISI,EAAc5H,IAAOS,IAAVP,WAAA,CAAAC,YAAA,8BAAAC,YAAA,eAAGJ,CAAH,iDACpBwH,EAEkBnH,EAAOT,WCFdiI,EAR8B,SAAAtF,GAAA,IAAG6D,EAAH7D,EAAG6D,IAAH,OAC3CA,EACEC,EAAAC,EAAAC,cAACoB,EAAD,CAAgBvB,IAAKA,IAErBC,EAAAC,EAAAC,cAACqB,EAAD,OC2CWE,EAtCV,SAAAvF,GAAA,IACHwF,EADGxF,EACHwF,aACAC,EAFGzF,EAEHyF,UACAC,EAHG1F,EAGH0F,WACAC,EAJG3F,EAIH2F,kBACAC,EALG5F,EAKH4F,gBALG,OAOH9B,EAAAC,EAAAC,cAAC6B,EAAD,KACGJ,GACC3B,EAAAC,EAAAC,cAACe,EAAD,KACEjB,EAAAC,EAAAC,cAAChG,EAAD,CAAa8H,QAAS,kBAAMH,EAAkBF,KAC5C3B,EAAAC,EAAAC,cAAC+B,EAAD,CAAWlC,IAAK4B,EAAUvF,YAIhC4D,EAAAC,EAAAC,cAACe,EAAD,KACEjB,EAAAC,EAAAC,cAAChG,EAAD,KACE8F,EAAAC,EAAAC,cAAC+B,EAAD,CAAWlC,IAAK2B,EAAatF,YAGjC4D,EAAAC,EAAAC,cAACe,EAAD,KACGW,EAAWM,IAAI,SAAAC,GAAK,OACnBnC,EAAAC,EAAAC,cAAChG,EAAD,CACEkI,IAAKD,EAAME,GACXL,QAAS,kBAAMH,EAAkBM,KAEjCnC,EAAAC,EAAAC,cAAC+B,EAAD,CAAWlC,IAAKoC,EAAM/F,aAGzBwF,EAAWU,OAAS,GACnBtC,EAAAC,EAAAC,cAAChG,EAAD,CAAa8H,QAASF,GACpB9B,EAAAC,EAAAC,cAACgB,EAAD,cCqFKqB,EArHQ,WAAM,IAAAlG,EACKC,mBAAiB,GADtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACpBmG,EADoBjG,EAAA,GACVkG,EADUlG,EAAA,GAAAK,EAECN,mBAAkB,CAAC,CAC7CF,QAAS,GACTsG,KAAM,GACNC,QAAS,GACTN,GAAI,KANqBxF,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEpBgG,EAFoB/F,EAAA,GAEZgG,EAFYhG,EAAA,GASrB6E,EAAekB,EAAOJ,GACtBb,OAAqCjD,IAAxBgD,EAAaoB,OAAwBF,EAAOlB,EAAaoB,aAAUpE,EAChFkD,EAAaF,EAAaiB,QAAQT,IAAI,SAAAG,GAAE,OAAIO,EAAOP,KA8EzD,OACErC,EAAAC,EAAAC,cAAC3F,EAAD,KACEyF,EAAAC,EAAAC,cAAC5F,EAAD,KACE0F,EAAAC,EAAAC,cAAC6C,EAAD,CACE5G,SAnBR,SAA4BC,GAC1ByG,EAAU,SAAAG,GACR,IAAMC,EAAYD,EAAWE,MAAM,GAKnC,OAJAD,EAAUT,GAAVhG,OAAA2G,EAAA,EAAA3G,CAAA,GACKyG,EAAUT,GADf,CAEEpG,YAEK6G,KAaH7G,QAASsF,EAAatF,UAExB4D,EAAAC,EAAAC,cAAC1F,EAAD,CACE2B,SAnER,SAA0BqB,GACxB,IAAMyF,EAAYL,EAAOM,MAAM,GAC/BD,EAAUT,GAAVhG,OAAA2G,EAAA,EAAA3G,CAAA,GACKyG,EAAUT,GADf,CAEEE,KAAMlF,EAAM4F,OAAOlE,QAGrB2D,EAAUI,IA6DJ/D,MAAOwC,EAAagB,KACpBW,YAAY,2BAEdrD,EAAAC,EAAAC,cAAC7F,EAAD,KACE2F,EAAAC,EAAAC,cAACjG,EAAD,CAAQ+H,QA9DhB,WACE9I,EAASkH,IAAI,WAAWkD,YAAY,GAAGC,KAAK,SAASC,KAAK,SAAAC,GACxD,IAAMC,EAAMD,EAASC,MACrB,GAAKA,EAAL,CAEA,IAAMd,EAASpG,OAAOmH,OAAuBD,GAAK,GAAGd,OAErDC,EAAUD,EAAOV,IAAI,SAAAC,GAAK,MAAK,CAC7BQ,QAASiB,KAAKC,MAAM1B,EAAMQ,SAC1BvG,QAAS+F,EAAM/F,QACfsG,KAAMP,EAAMO,KACZI,OAAQX,EAAMW,OACdT,GAAIF,EAAME,YAkDR,wBACArC,EAAAC,EAAAC,cAACjG,EAAD,CAAQ+H,QA1FhB,WACE,IAAM8B,EAAuB,CAC3BlB,OAAQA,EAAOV,IAAI,SAAAC,GAAK,OAAA3F,OAAA2G,EAAA,EAAA3G,CAAA,CACtBmG,QAASiB,KAAKG,UAAU5B,EAAMQ,SAC9BvG,QAAS+F,EAAM/F,QACfsG,KAAMP,EAAMO,KACZL,GAAIF,EAAME,SACW3D,IAAjByD,EAAMW,OAAuB,CAAEA,OAAQX,EAAMW,QAAW,OAIhE5J,EACGkH,IAAI,WACJ3E,KAAKqI,GACLN,KAAK,kBAAMQ,QAAQC,IAAI,uBA4EpB,aAGJjE,EAAAC,EAAAC,cAACgE,EAAD,CACEvC,UAAWA,EACXD,aAAcA,EACdE,WAAYA,EACZC,kBAzBN,SAAoCM,GAClCM,EAAYN,EAAME,KAyBdP,gBAtDN,WACEe,EAAU,SAAAG,GACR,IAAMC,EAAYD,EAAWE,MAAM,GAWnC,OATAD,EAAUT,GAAUG,QAAQlH,KAAKwH,EAAUX,QAC3CW,EAAUxH,KAAK,CACbW,QAAS,GACTsG,KAAM,GACNI,OAAQN,EACRG,QAAS,GACTN,GAAIY,EAAUX,SAGTW,0eCjFN,IAAMkB,EAAcC,YAAHC,IAQNrK,EAAOZ,SCLnBkL,EAAgBC,cAAI,kBACxBvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuE,SAAA,KACExE,EAAAC,EAAAC,cAACiE,EAAD,MACAnE,EAAAC,EAAAC,cAACuE,EAAD,SAIJC,IAASC,OAAO3E,EAAAC,EAAAC,cAACoE,EAAD,MAASM,SAASC,eAAe","file":"static/js/main.f67ffb97.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyC5mVxaorL_LmNWasC5LNmAC3cmlQ-5vFM',\n  authDomain: 'story-maker-85706.firebaseapp.com',\n  databaseURL: 'https://story-maker-85706.firebaseio.com',\n  projectId: 'story-maker-85706',\n  storageBucket: 'story-maker-85706.appspot.com',\n  messagingSenderId: '105986550181',\n  appId: '1:105986550181:web:81ec40d053faad45'\n});\n\nexport default firebase.database();","import { darken, lighten } from 'polished';\n\nconst primary = '#1c4265';\nconst primaryVariant = darken(0.15, primary);\nconst secondary = lighten(0.5, primary);\nconst secondaryVariant = lighten(0.15, primary);\n\nexport default {\n  primary,\n  primaryVariant,\n  secondary,\n  secondaryVariant,\n}\n","import styled from 'styled-components/macro';\n\nimport Colors from './colors';\n\nconst ButtonBase = styled.button`\n  all: unset;\n  background: ${Colors.secondaryVariant};\n  margin: 5px;\n  text-align: center;\n  cursor: pointer;\n  border: solid 3px ${Colors.secondaryVariant};\n  \n  :hover {\n    border-color: ${Colors.primaryVariant};\n  }\n  \n  :active {\n    background: ${Colors.primary};\n  }\n`\n\nexport const Button = styled(ButtonBase)`\n  flex: 1;\n  border-radius: 5px;\n  padding: 7px;\n`;\n\nexport const RoundButton = styled(ButtonBase)`\n  border-radius: 100%;\n  flex: unset;\n  overflow: hidden;\n  height: 80px;\n  width: 80px;\n`\n\nconst Base = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nexport const Row = styled(Base)``;\n\nexport const Column = styled(Base)`\n  flex: 1;\n  flex-direction: column;\n`;\n","import styled from 'styled-components/macro';\n\nimport Colors from './colors';\nimport { Row } from './UI.style';\n\nexport const Wrapper = styled(Row)`\n  background: ${Colors.primary};\n  color: ${Colors.secondary};\n  flex: 1;\n\n  @media (orientation:portrait) {\n    flex-direction: column;\n  }\n`;\n\nexport const TextInput = styled.textarea`\n  all: unset;\n  background: ${Colors.primaryVariant};\n  padding: 10px;\n  border-radius: 10px;\n  margin: 5px;\n  height: 55px;\n\n  ::placeholder {\n    color: ${Colors.secondaryVariant}\n  }\n`;\n","function bresenham(pointA: Point, pointB: Point): Point[] {\n  const points: Point[] = [];\n  const deltaX = pointB.x - pointA.x;\n  const deltaY = pointB.y - pointA.y;\n  const absDeltaY = Math.abs(deltaX);\n  const absDeltaX = Math.abs(deltaY);\n  const signX = deltaX > 0 ? 1 : -1;\n  const signY = deltaY > 0 ? 1 : -1;\n\n  let eps = 0;\n\n  if (absDeltaY > absDeltaX) {\n    for (let x = pointA.x, y = pointA.y; signX < 0 ? x >= pointB.x : x <= pointB.x; x += signX) {\n      points.push({ x, y });\n      eps += absDeltaX;\n      if ((eps << 1) >= absDeltaY) {\n        y += signY;\n        eps -= absDeltaY;\n      }\n    }\n  } else {\n    for (let x = pointA.x, y = pointA.y; signY < 0 ? y >= pointB.y : y <= pointB.y; y += signY) {\n      points.push({ x, y });\n      eps += absDeltaY;\n      if ((eps << 1) >= absDeltaX) {\n        x += signX;\n        eps -= absDeltaX;\n      }\n    }\n  }\n  return points;\n};\n\nexport default bresenham;\n","import styled from 'styled-components/macro';\n\nimport Colors from './colors';\n\nexport const Wrapper = styled.div`\n  flex: 1;\n  background: ${Colors.secondaryVariant};\n  position: relative;\n  overflow: hidden;\n  margin: 5px;\n  border-radius: 10px;\n  overflow: hidden;\n`\n\nexport const DrawingImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n  position: absolute;\n  top: 0;\n  left: 0;\n  image-rendering: pixelated;\n`\n\nexport const Canvas = styled.canvas`\n  cursor: crosshair;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  touch-action: none;\n`\n","import React, { useState, useEffect } from 'react';\nimport bresenham from '../bresenham';\n\nimport Colors from '../styles/colors';\nimport {\n  Canvas,\n  Wrapper,\n  DrawingImage,\n} from '../styles/Drawing.style';\n\nconst viewBoxSize = {\n  width: 80,\n  height: 60,\n};\n\nconst Drawing: React.FC<{\n  onChange: (dataURL: string) => void,\n  dataURL: string,\n}> = ({\n  onChange,\n  dataURL,\n}) => {\n    const [context, setContext] = useState<CanvasRenderingContext2D>();\n    const [canvas, setCanvas] = useState<HTMLCanvasElement>();\n    const [isDrawing, setIsDrawing] = useState(false);\n    const [prevPosition, setPrevPosition] = useState<Point>();\n\n    useEffect(() => {\n      if (!context || !canvas) {\n        return;\n      }\n\n      if (!dataURL) {\n        context.fillStyle = Colors.secondary;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n\n        onChange(canvas.toDataURL());\n      }\n      context.fillStyle = Colors.primary;\n\n      // When dataURL is updated, we update the canvas with the new image.\n      // But only when a new full image is being loaded, not when we are drawing.\n      if (!isDrawing) {\n        const image = new Image();\n        image.onload = function () {\n          context.drawImage(image, 0, 0);\n        }\n        image.src = dataURL;\n      }\n    }, [context, canvas, dataURL, isDrawing, onChange]);\n\n    function relativePoint(event: React.MouseEvent | React.Touch): Point {\n      const {\n        width,\n        height,\n        left,\n        top,\n      } = canvas!.getBoundingClientRect();\n\n      const viewBoxRatio = viewBoxSize.height / viewBoxSize.width;\n      const boundsRatio = height / width;\n\n      const scale = viewBoxRatio < boundsRatio\n        ? width / viewBoxSize.width\n        : height / viewBoxSize.height\n\n      const offset: Point = {\n        x: left,\n        y: top,\n      };\n\n      if (viewBoxRatio > boundsRatio) {\n        offset.x += (width - (viewBoxSize.width * scale)) / 2;\n      } else {\n        offset.y += (height - (viewBoxSize.height * scale)) / 2;\n      }\n\n      return {\n        x: Math.floor((event.clientX - offset.x) / scale),\n        y: Math.floor((event.clientY - offset.y) / scale),\n      };\n    }\n\n    function setCanvasRef(instance: HTMLCanvasElement | null) {\n      if (!instance || canvas || context) return;\n\n      setCanvas(instance);\n      setContext(instance.getContext('2d') || undefined);\n    }\n\n    function draw(event: React.MouseEvent | React.Touch) {\n      if (!context || !canvas) return;\n\n      const position: Point = relativePoint(event);\n      const line = bresenham(prevPosition || position, position);\n\n      for (let point of line) {\n        context.fillRect(point.x, point.y, 1, 1);\n      }\n\n      onChange(canvas.toDataURL());\n\n      setPrevPosition(position);\n    }\n\n    function handleMouseMove(mouseEvent: React.MouseEvent) {\n      if (isDrawing) {\n        draw(mouseEvent);\n      }\n    }\n\n    function handleTouchMove(touchEvent: React.TouchEvent) {\n      draw(touchEvent.touches[0]);\n    }\n\n    function handleMouseDown(mouseEvent: React.MouseEvent) {\n      startDrawing();\n      draw(mouseEvent);\n    }\n\n    function handleTouchStart(touchEvent: React.TouchEvent) {\n      startDrawing();\n      draw(touchEvent.touches[0]);\n    }\n\n    function startDrawing() {\n      setIsDrawing(true);\n    }\n\n    function stopDrawing() {\n      setIsDrawing(false);\n      setPrevPosition(undefined);\n    }\n\n    return (\n      <Wrapper>\n        {dataURL && (\n          <DrawingImage src={dataURL} />\n        )}\n        <Canvas\n          ref={setCanvasRef}\n          onMouseMove={handleMouseMove}\n          onTouchMove={handleTouchMove}\n          onTouchStart={handleTouchStart}\n          onMouseDown={handleMouseDown}\n          onMouseUp={stopDrawing}\n          onTouchEnd={stopDrawing}\n          onMouseOut={stopDrawing}\n          width={viewBoxSize.width}\n          height={viewBoxSize.height}\n        />\n      </Wrapper>\n    );\n  };\n\nexport default Drawing;\n","import styled from 'styled-components/macro';\n\nimport { Row, Column } from './UI.style';\n\nexport const Wrapper = styled(Column)`\n  flex-direction: column;\n  margin: 10px;\n  display: flex;\n  flex: unset;\n\n  @media (orientation:portrait) {\n    flex-direction: row;\n  }\n`\n\nexport const PanelsWrapper = styled(Row)`\n  @media (orientation:portrait) {\n    flex-direction: column;\n  }\n  align-items: center;\n  justify-content: center;\n`\n\nexport const NewPannelText = styled.div`\n  margin-top: -22px;\n  font-size: 5em;\n`\n","import styled, { css } from 'styled-components/macro';\n\nimport Colors from './colors';\n\nconst common = css`\n  width: 100%;\n  height: 100%;\n`\n\nexport const ThumbnailImage = styled.img`\n  ${common}\n  flex: 1;\n`\n\nexport const Placeholder = styled.div`\n  ${common}\n  padding-bottom: 75%;\n  background-color: ${Colors.secondary};\n`\n","import React from 'react';\n\nimport {\n  ThumbnailImage,\n  Placeholder,\n} from '../styles/Thumbnail.style'\n\nconst Thumbnail: React.FC<{ src: string }> = ({ src }) => (\n  src ? (\n    <ThumbnailImage src={src} />\n  ) : (\n    <Placeholder />\n  )\n);\n\nexport default Thumbnail\n","import React from 'react';\n\nimport {\n  NewPannelText,\n  Wrapper,\n  PanelsWrapper,\n} from '../styles/PanelConnections.style'\nimport Thumbnail from './Thumbnail';\nimport { RoundButton } from '../styles/UI.style';\n\nconst PanelConnections: React.FC<{\n  prevPanel?: Panel,\n  currentPanel: Panel,\n  nextPanels: Panel[],\n  onConnectionClick: (panel: Panel) => void,\n  onNewPanelClick: () => void,\n}> = ({\n  currentPanel,\n  prevPanel,\n  nextPanels,\n  onConnectionClick,\n  onNewPanelClick,\n}) => (\n  <Wrapper>\n    {prevPanel && (\n      <PanelsWrapper>\n        <RoundButton onClick={() => onConnectionClick(prevPanel)}>\n          <Thumbnail src={prevPanel.dataURL} />\n        </RoundButton>\n      </PanelsWrapper>\n    )}\n    <PanelsWrapper>\n      <RoundButton>\n        <Thumbnail src={currentPanel.dataURL} />\n      </RoundButton>\n    </PanelsWrapper>\n    <PanelsWrapper>\n      {nextPanels.map(panel => (\n        <RoundButton\n          key={panel.id}\n          onClick={() => onConnectionClick(panel)}\n        >\n          <Thumbnail src={panel.dataURL} />\n        </RoundButton>\n      ))}\n      {nextPanels.length < 2 && (\n        <RoundButton onClick={onNewPanelClick}>\n          <NewPannelText>+</NewPannelText>\n        </RoundButton>\n      )}\n    </PanelsWrapper>\n  </Wrapper>\n);\n\nexport default PanelConnections\n","import React, { useState } from 'react';\n\nimport database from '../database';\nimport {\n  Row,\n  Column,\n  Button,\n} from '../styles/UI.style';\nimport {\n  Wrapper,\n  TextInput,\n} from '../styles/Home.style';\nimport Drawing from './Drawing';\nimport PanelConnections from './PanelConnections';\n\nconst Home: React.FC = () => {\n  const [selected, setSelected] = useState<number>(0);\n  const [panels, setPanels] = useState<Panel[]>([{\n    dataURL: '',\n    text: '',\n    nextIds: [],\n    id: 0,\n  }]);\n\n  const currentPanel = panels[selected];\n  const prevPanel = (currentPanel.prevId !== undefined) ? panels[currentPanel.prevId] : undefined;\n  const nextPanels = currentPanel.nextIds.map(id => panels[id]);\n\n  function handlePublishClick() {\n    const data: SerializedData = {\n      panels: panels.map(panel => ({\n        nextIds: JSON.stringify(panel.nextIds),\n        dataURL: panel.dataURL,\n        text: panel.text,\n        id: panel.id,\n        ...(panel.prevId !== undefined ? { prevId: panel.prevId } : {}),\n      })),\n    };\n\n    database\n      .ref('stories')\n      .push(data)\n      .then(() => console.log('done publishing'));\n  }\n\n  function handleTextChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n    const newPanels = panels.slice(0);\n    newPanels[selected] = {\n      ...newPanels[selected],\n      text: event.target.value,\n    };\n\n    setPanels(newPanels);\n  }\n\n  function handleLoadClick() {\n    database.ref('stories').limitToLast(1).once('value').then(snapshot => {\n      const val = snapshot.val();\n      if (!val) return;\n\n      const panels = Object.values<SerializedData>(val)[0].panels;\n\n      setPanels(panels.map(panel => ({\n        nextIds: JSON.parse(panel.nextIds),\n        dataURL: panel.dataURL,\n        text: panel.text,\n        prevId: panel.prevId,\n        id: panel.id,\n      })));\n    })\n  }\n\n  function handleNewPanelClick() {\n    setPanels(prevPanels => {\n      const newPanels = prevPanels.slice(0);\n\n      newPanels[selected].nextIds.push(newPanels.length);\n      newPanels.push({\n        dataURL: '',\n        text: '',\n        prevId: selected,\n        nextIds: [],\n        id: newPanels.length,\n      });\n\n      return newPanels;\n    })\n  };\n\n  function handleCanvasChange(dataURL: string) {\n    setPanels(prevPanels => {\n      const newPanels = prevPanels.slice(0);\n      newPanels[selected] = {\n        ...newPanels[selected],\n        dataURL,\n      };\n      return newPanels;\n    });\n  }\n\n  function handlePanelConnectionClick(panel: Panel) {\n    setSelected(panel.id);\n  }\n\n  return (\n    <Wrapper>\n      <Column>\n        <Drawing\n          onChange={handleCanvasChange}\n          dataURL={currentPanel.dataURL}\n        />\n        <TextInput\n          onChange={handleTextChange}\n          value={currentPanel.text}\n          placeholder=\"Insert panel text here\"\n        />\n        <Row>\n          <Button onClick={handleLoadClick}>[Load From Database]</Button>\n          <Button onClick={handlePublishClick}>Publish</Button>\n        </Row>\n      </Column>\n      <PanelConnections\n        prevPanel={prevPanel}\n        currentPanel={currentPanel}\n        nextPanels={nextPanels}\n        onConnectionClick={handlePanelConnectionClick}\n        onNewPanelClick={handleNewPanelClick}\n      />\n    </Wrapper>\n  )\n}\n\nexport default Home;\n","import { createGlobalStyle } from 'styled-components'\n\nimport Colors from './colors';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background: ${Colors.primary};\n  }\n\n  #root {\n    display: flex;\n    height: 100vh;\n  }\n\n  *{\n    user-select: none;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { hot } from 'react-hot-loader/root';\n\nimport Home from './components/Home';\nimport { GlobalStyle } from './styles/Global.style';\n\nconst App: React.FC = hot(() => (\n  <>\n    <GlobalStyle/>\n    <Home />\n  </>\n));\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}